import{_ as s,o as n,c as a,e}from"./app-Cxb9Ozmt.js";const p="/assets/2022-08-07-16-59-00-image-Bf1LvL0D.png",l="/assets/2022-08-07-17-16-29-image-bhJ8h_sv.png",t={},c=e('<h1 id="java-模块化" tabindex="-1"><a class="header-anchor" href="#java-模块化"><span>Java 模块化</span></a></h1><h2 id="一、模块系统简介" tabindex="-1"><a class="header-anchor" href="#一、模块系统简介"><span>一、模块系统简介</span></a></h2><p>如果把 Java 8 比作单体应用，那么引入模块系统之后，从 Java 9 开始，Java 就华丽的转身为微服务。模块系统，项目代号 Jigsaw，最早于2008年8月提出（比Martin Fowler 提出微服务还早6年），2014年跟随 Java 9 正式进入开发阶段，最终跟随 Java 9 发布于2017年9月。</p><p>那么什么是模块系统？官方的定义是 <strong>A uniquely named， reusable group of related packages， as well as resources （such as images and XML files） and a module descriptor</strong>．如图-1 所示，模块的载体是 jar 文件，一个模块就是一个 jar 文件，但相比于传统的 jar 文件，模块的根目录下多了一个 <code>module-info.class</code> 文件，也即 <code>module descriptor</code>。 <code>module descriptor</code> 包含以下 信息：</p><ul><li>模块名称</li><li>依赖哪些模块</li><li>导出模块内的哪些包（允许直接 import 使用）</li><li>开放模块内的哪些包（允许通过 Java 反射访问）</li><li>提供哪些服务</li><li>依赖哪些服务</li></ul><h2 id="二、演示-前期准备" tabindex="-1"><a class="header-anchor" href="#二、演示-前期准备"><span>二、演示（前期准备）</span></a></h2><p>新建三个项目（IDEA中创建一个空项目，在空项目中创建3个模块(module)），如下图</p><p><img src="'+p+`" alt="2022-08-07-16-59-00-image.png"></p><p>给每一个子模块创建类，内容如下（模板），并添加 <code>module-info.java</code> 文件</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>xx</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * <span class="token keyword">@author</span> reine</span>
<span class="line"> * 2022/8/7 17:03</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloXx</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, I&#39;m Xx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>工程结构如下</p><p><img src="`+l+`" alt="2022-08-07-17-16-29-image.png"></p><h2 id="三、模块化语法-引入与导出" tabindex="-1"><a class="header-anchor" href="#三、模块化语法-引入与导出"><span>三、模块化语法（引入与导出）</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">module</span> <span class="token constant">XX</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">exports</span> $<span class="token punctuation">{</span><span class="token keyword">package</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// 将对应包名中的所有类暴露</span></span>
<span class="line">    <span class="token keyword">exports</span> $<span class="token punctuation">{</span><span class="token keyword">package</span><span class="token punctuation">}</span> <span class="token keyword">to</span> <span class="token class-name">X</span><span class="token punctuation">,</span> <span class="token class-name">Y</span><span class="token punctuation">,</span> <span class="token class-name">Z</span><span class="token punctuation">;</span> <span class="token comment">// 将对应包名中的所有类暴露给X，Y，Z模块</span></span>
<span class="line">    <span class="token keyword">requires</span> $<span class="token punctuation">{</span><span class="token keyword">module</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// 导入对应模块</span></span>
<span class="line">    <span class="token keyword">requires</span> <span class="token keyword">transitive</span> $<span class="token punctuation">{</span><span class="token keyword">module</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// 导入对应模块，如果有模块依赖了B，则该模块同时可以使用A（传递依赖）</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果使用IDEA，则需要在对应项目中的 <code>.iml</code> 文件中注明依赖的模块，如</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>orderEntry</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span> <span class="token attr-name">module-name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>A<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h5 id="例1-模块引入与导出" tabindex="-1"><a class="header-anchor" href="#例1-模块引入与导出"><span>例1（模块引入与导出）</span></a></h5><p>模块A中的 <code>module-info.java</code> 文件</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">module</span> <span class="token class-name">A</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">exports</span> <span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>a1</span> <span class="token keyword">to</span> <span class="token class-name">B</span><span class="token punctuation">;</span> <span class="token comment">// 导出模块A中的包com.reine.a1给模块B使用</span></span>
<span class="line">    <span class="token keyword">exports</span> <span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>a2</span><span class="token punctuation">;</span> <span class="token comment">// 导出模块A中的包com.reine.a2</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>模块B中的 <code>module-info.java</code> 文件</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">module</span> <span class="token class-name">B</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">requires</span> <span class="token namespace">java<span class="token punctuation">.</span>base</span><span class="token punctuation">;</span> <span class="token comment">// 此模块自动导入，可以不写</span></span>
<span class="line">    <span class="token keyword">requires</span> <span class="token class-name">A</span><span class="token punctuation">;</span> <span class="token comment">// 在B模块中导入A模块</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>main</code> 方法</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>main</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>a1<span class="token punctuation">.</span></span><span class="token class-name">HelloA1</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">new</span> <span class="token class-name">HelloA1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>模块C中的 <code>module-info.java</code> 文件</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">module</span> <span class="token class-name">C</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">requires</span> <span class="token class-name">A</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>main</code> 方法</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>main</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>a1<span class="token punctuation">.</span></span><span class="token class-name">HelloA1</span></span><span class="token punctuation">;</span> <span class="token comment">// 编译报错</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>a2<span class="token punctuation">.</span></span><span class="token class-name">HelloA2</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * <span class="token keyword">@author</span> reine</span>
<span class="line"> * 2022/8/7 17:23</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">new</span> <span class="token class-name">HelloA1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 编译报错Package &#39;com.reine.a1&#39; is declared in module &#39;A&#39;, which does not export it to module &#39;C&#39;</span></span>
<span class="line">        <span class="token keyword">new</span> <span class="token class-name">HelloA2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="例2-模块b传递依赖模块a" tabindex="-1"><a class="header-anchor" href="#例2-模块b传递依赖模块a"><span>例2（模块B传递依赖模块A）</span></a></h5><p>模块B中的 <code>module-info.java</code> 文件</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">module</span> <span class="token class-name">B</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">requires</span> <span class="token namespace">java<span class="token punctuation">.</span>base</span><span class="token punctuation">;</span> <span class="token comment">// 此模块自动导入，可以不写</span></span>
<span class="line">    <span class="token keyword">requires</span> <span class="token keyword">transitive</span> <span class="token class-name">A</span><span class="token punctuation">;</span> <span class="token comment">// 在B模块中导入A模块（传递依赖）</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>模块C中导入模块B</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">module</span> <span class="token class-name">C</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">requires</span> <span class="token class-name">B</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>模块C中的 <code>main</code> 方法</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>mainc</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>a1<span class="token punctuation">.</span></span><span class="token class-name">HelloA1</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>a2<span class="token punctuation">.</span></span><span class="token class-name">HelloA2</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">new</span> <span class="token class-name">HelloA1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">new</span> <span class="token class-name">HelloA2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、模块化语法-反射访问" tabindex="-1"><a class="header-anchor" href="#四、模块化语法-反射访问"><span>四、模块化语法（反射访问）</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token comment">// 如果在module前加open，则表示此模块中所有包下的类都可以通过反射访问</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token keyword">open</span><span class="token punctuation">]</span> <span class="token keyword">module</span> <span class="token constant">XX</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 当同一个包同时被exports 和opens 修饰时，opens生效</span></span>
<span class="line">    <span class="token keyword">exports</span> $<span class="token punctuation">{</span><span class="token keyword">package</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// 将对应包名中的所有类暴露</span></span>
<span class="line">    <span class="token keyword">exports</span> $<span class="token punctuation">{</span><span class="token keyword">package</span><span class="token punctuation">}</span> <span class="token keyword">to</span> <span class="token class-name">X</span><span class="token punctuation">,</span> <span class="token class-name">Y</span><span class="token punctuation">,</span> <span class="token class-name">Z</span><span class="token punctuation">;</span> <span class="token comment">// 将对应包名中的所有类暴露给X，Y，Z模块</span></span>
<span class="line">    <span class="token keyword">opens</span> $<span class="token punctuation">{</span><span class="token keyword">package</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// 允许其他模块使用反射方式访问此包中所有方法</span></span>
<span class="line">    <span class="token keyword">opens</span> $<span class="token punctuation">{</span><span class="token keyword">package</span><span class="token punctuation">}</span> <span class="token keyword">to</span> <span class="token class-name">X</span><span class="token punctuation">,</span> <span class="token class-name">Y</span><span class="token punctuation">,</span> <span class="token class-name">Z</span><span class="token punctuation">;</span> <span class="token comment">// 允许X, Y, Z模块使用反射方式访问此包中所有方法</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="例3-将模块a中-helloa1-的-hello-方法的访问修饰符改为-private" tabindex="-1"><a class="header-anchor" href="#例3-将模块a中-helloa1-的-hello-方法的访问修饰符改为-private"><span>例3（将模块A中 HelloA1 的 hello 方法的访问修饰符改为 private）</span></a></h5><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>a1</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloA1</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, I&#39;m A1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用exports导出 <code>com.reine.a1</code></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">module</span> <span class="token class-name">A</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">exports</span> <span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>a1</span><span class="token punctuation">;</span> <span class="token comment">// 导出模块A中的包com.reine.a1</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>B中使用 <code>requires A;</code> 导入模块A，使用反射调用 hello 方法（<strong>报错</strong><code>**java.lang.reflect.InaccessibleObjectException**</code>）</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>mainb</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Method</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main1</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> cls <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;com.reine.a1.HelloA1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">Method</span> hello <span class="token operator">=</span> cls<span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            hello<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 报错 Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make private void com.reine.a1.HelloA1.hello() accessible: module A does not &quot;opens com.reine.a1&quot; to module B</span></span>
<span class="line">            hello<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>cls<span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="例4-将模块a中-helloa2-的-hello-方法的访问修饰符改为-private" tabindex="-1"><a class="header-anchor" href="#例4-将模块a中-helloa2-的-hello-方法的访问修饰符改为-private"><span>例4 （将模块A中 HelloA2 的 hello 方法的访问修饰符改为 private）</span></a></h5><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>a2</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloA2</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, I&#39;m A2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 opens 导出 <code>com.reine.a1</code> <strong>【对比例3】</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">module</span> <span class="token class-name">A</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">opens</span> <span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>a2</span><span class="token punctuation">;</span> <span class="token comment">// 依赖该模块的其他项目可以使用反射访问这个包下的内容</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>B中使用 <code>requires A;</code> 导入模块A，使用反射调用 hello 方法（<strong>通过</strong>）</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>mainb</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Method</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main2</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> cls <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;com.reine.a2.HelloA2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">Method</span> hello <span class="token operator">=</span> cls<span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            hello<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 通过</span></span>
<span class="line">            hello<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>cls<span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五、模块化语法-服务提供及使用" tabindex="-1"><a class="header-anchor" href="#五、模块化语法-服务提供及使用"><span>五、模块化语法（服务提供及使用）</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">module</span> <span class="token constant">XX</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">provides</span> $<span class="token punctuation">{</span><span class="token keyword">interface</span><span class="token punctuation">}</span> <span class="token keyword">with</span> $<span class="token punctuation">{</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">,</span> $<span class="token punctuation">{</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// 将对应服务（接口）的具体实现类（可以有多个）提供给外部使用</span></span>
<span class="line">    <span class="token keyword">uses</span> $<span class="token punctuation">{</span><span class="token keyword">interface</span><span class="token punctuation">}</span> <span class="token comment">// 使用服务，前提必须引入服务所在的包</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="例5-模块b使用模块a定义的服务" tabindex="-1"><a class="header-anchor" href="#例5-模块b使用模块a定义的服务"><span>例5 （模块B使用模块A定义的服务）</span></a></h5><p>模块A服务类 <code>Print.java</code></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Print</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">void</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>具体实现类 <code>HelloA1</code> 和 <code>HelloA2</code></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>a1</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">Print</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloA1</span> <span class="token keyword">implements</span> <span class="token class-name">Print</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, I&#39;m A1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>a2</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">Print</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 没有无参构造函数</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloA2</span> <span class="token keyword">implements</span> <span class="token class-name">Print</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">HelloA2</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, I&#39;m &quot;</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 固定函数名</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Print</span> <span class="token function">provider</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">HelloA2</span><span class="token punctuation">(</span><span class="token string">&quot;reine&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>module-info.java</code></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">module</span> <span class="token class-name">A</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">exports</span> <span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">provides</span> <span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">Print</span> <span class="token keyword">with</span> <span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>a1<span class="token punctuation">.</span></span><span class="token class-name">HelloA1</span><span class="token punctuation">;</span> <span class="token comment">// 将具体服务HelloA1提供出去</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>模块B <code>module-info.java</code> 使用 <code>Print</code> 服务</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">module</span> <span class="token class-name">B</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">requires</span> <span class="token class-name">A</span><span class="token punctuation">;</span> </span>
<span class="line">    <span class="token keyword">uses</span> <span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">Print</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>main</code> 方法</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>mainb</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>reine<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">Print</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ServiceLoader</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main3</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">ServiceLoader</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Print</span><span class="token punctuation">&gt;</span></span> prints <span class="token operator">=</span> <span class="token class-name">ServiceLoader</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token class-name">Print</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Print</span> print <span class="token operator">:</span> prints<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            print<span class="token punctuation">.</span><span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出 Hello, I&#39;m A1</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="六、命令行选项-模块相关" tabindex="-1"><a class="header-anchor" href="#六、命令行选项-模块相关"><span>六、命令行选项（模块相关）</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">java</span> --list-modules <span class="token comment"># 查看所有jdk自带的模块</span></span>
<span class="line"><span class="token function">java</span> --describe-module <span class="token variable">\${module}</span> <span class="token comment"># 查看指定模块下的模块化消息</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,64),o=[c];function i(u,d){return n(),a("div",null,o)}const r=s(t,[["render",i],["__file","javaModular.html.vue"]]),m=JSON.parse('{"path":"/blogs/dev/javaModular.html","title":"Java 模块化","lang":"zh-CN","frontmatter":{"title":"Java 模块化","date":"2023/7/20","tags":["Java"],"categories":["dev"]},"headers":[{"level":2,"title":"一、模块系统简介","slug":"一、模块系统简介","link":"#一、模块系统简介","children":[]},{"level":2,"title":"二、演示（前期准备）","slug":"二、演示-前期准备","link":"#二、演示-前期准备","children":[]},{"level":2,"title":"三、模块化语法（引入与导出）","slug":"三、模块化语法-引入与导出","link":"#三、模块化语法-引入与导出","children":[]},{"level":2,"title":"四、模块化语法（反射访问）","slug":"四、模块化语法-反射访问","link":"#四、模块化语法-反射访问","children":[]},{"level":2,"title":"五、模块化语法（服务提供及使用）","slug":"五、模块化语法-服务提供及使用","link":"#五、模块化语法-服务提供及使用","children":[]},{"level":2,"title":"六、命令行选项（模块相关）","slug":"六、命令行选项-模块相关","link":"#六、命令行选项-模块相关","children":[]}],"git":{"createdTime":1689907574000,"updatedTime":1722134881000,"contributors":[{"name":"reine-ishyanami","email":"2402979195@qq.com","commits":2}]},"filePathRelative":"blogs/dev/javaModular.md"}');export{r as comp,m as data};
