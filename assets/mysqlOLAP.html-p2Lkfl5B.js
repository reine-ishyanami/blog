import{_ as e,r as p,o as l,c as t,a as s,b as o,d as c,e as n}from"./app-Cxb9Ozmt.js";const i="/assets/mysqlOLAP_01-DcBJHMMb.png",r="/assets/mysqlOLAP_02-Djz1h1fk.png",d="/assets/mysqlOLAP_03-DgT_ItJ1.png",k="/assets/mysqlOLAP_04-MVyBi3OP.png",u="/assets/mysqlOLAP_05-KQu-_kGh.png",m="/assets/mysqlOLAP_06-CqeX-EHJ.png",y="/assets/mysqlOLAP_07-jcDVXp-H.png",v="/assets/mysqlOLAP_08-DBhHKnRw.png",b="/assets/mysqlOLAP_09-B07oSJr_.png",h="/assets/mysqlOLAP_10-Dd5KOCp4.png",w={},g=n('<h1 id="mysql-开窗函数" tabindex="-1"><a class="header-anchor" href="#mysql-开窗函数"><span>MySQL 开窗函数</span></a></h1><p>开窗函数是在 MySQL8.0 以后才新加的功能，因此，要想直接使用开窗函数，则 MySQL 版本要 8.0 以上。其实开窗函数是在满足某种条件的记录集合上执行的特殊函数。对于每条记录都要在此窗口内执行函数，有的函数随着记录不同，窗口大小都是固定的，这种属于静态窗口；有的函数则相反，不同的记录对应着不同的窗口，这种动态变化的窗口叫滑动窗口。开窗函数的本质还是聚合运算，只不过它更具灵活性，它对数据的每一行，都使用与该行相关的行进行计算并返回计算结果。其具体语法如下：</p><p><code>开窗函数名([&lt;字段名&gt;]) over([partition by &lt;分组字段&gt;] [order by &lt;排序字段&gt; [desc]] [&lt;细分窗口&gt;])</code></p><ul><li>partition by 子句：按照指定字段进行分区，两个分区由边界分隔，开窗函数在不同的分区内分别执行，在跨越分区边界时重新初始化。</li><li>order by 子句：按照指定字段进行排序，开窗函数将按照排序后的记录顺序进行编号。可以和 partition by 子句配合使用，也可以单独使用。</li><li>frame 子句：当前分区的一个子集，用来定义子集的规则，通常用来作为滑动窗口使用。</li></ul><h2 id="案例说明" tabindex="-1"><a class="header-anchor" href="#案例说明"><span>案例说明</span></a></h2>',5),_={href:"https://github.com/reine-ishyanami/article/tree/master/code/mysqlOLAP",target:"_blank",rel:"noopener noreferrer"},q=n('<h4 id="表数据概览" tabindex="-1"><a class="header-anchor" href="#表数据概览"><span>表数据概览</span></a></h4><p><img src="'+i+`" alt="employee table"></p><h4 id="统计每个部门的平均工资" tabindex="-1"><a class="header-anchor" href="#统计每个部门的平均工资"><span>统计每个部门的平均工资</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="line"><span class="token keyword">select</span> department_name<span class="token punctuation">,</span></span>
<span class="line">       <span class="token function">avg</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">from</span> employee</span>
<span class="line"><span class="token keyword">group</span> <span class="token keyword">by</span> department_name<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+r+`" alt="avg salary"></p><h4 id="为每一位员工附加部门的平均工资" tabindex="-1"><a class="header-anchor" href="#为每一位员工附加部门的平均工资"><span>为每一位员工附加部门的平均工资</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="line"><span class="token keyword">select</span> <span class="token operator">*</span><span class="token punctuation">,</span></span>
<span class="line">       <span class="token function">avg</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span></span>
<span class="line">           <span class="token keyword">over</span> <span class="token punctuation">(</span><span class="token keyword">partition</span> <span class="token keyword">by</span> department_name<span class="token punctuation">)</span></span>
<span class="line">           <span class="token keyword">as</span> department_avg_salary</span>
<span class="line"><span class="token keyword">from</span> employee<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+d+`" alt="with department avg salary"></p><h4 id="按入司时间降序统计每个部门员工的工资累加值" tabindex="-1"><a class="header-anchor" href="#按入司时间降序统计每个部门员工的工资累加值"><span>按入司时间降序统计每个部门员工的工资累加值</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="line"><span class="token keyword">select</span> <span class="token operator">*</span><span class="token punctuation">,</span></span>
<span class="line">       <span class="token function">sum</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span></span>
<span class="line">           <span class="token keyword">over</span> <span class="token punctuation">(</span><span class="token keyword">partition</span> <span class="token keyword">by</span> department_name <span class="token keyword">order</span> <span class="token keyword">by</span> hiredate <span class="token keyword">desc</span><span class="token punctuation">)</span></span>
<span class="line">           <span class="token keyword">as</span> sum_salary</span>
<span class="line"><span class="token keyword">from</span> employee<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+k+`" alt="sum of department salary"></p><h4 id="按入司时间升序统计相邻两个员工的平均工资" tabindex="-1"><a class="header-anchor" href="#按入司时间升序统计相邻两个员工的平均工资"><span>按入司时间升序统计相邻两个员工的平均工资</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="line"><span class="token keyword">select</span> <span class="token operator">*</span><span class="token punctuation">,</span></span>
<span class="line">       <span class="token function">avg</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span></span>
<span class="line">           <span class="token keyword">over</span> <span class="token punctuation">(</span><span class="token keyword">partition</span> <span class="token keyword">by</span> department_name <span class="token keyword">order</span> <span class="token keyword">by</span> hiredate <span class="token keyword">rows</span> <span class="token operator">between</span> <span class="token number">1</span> <span class="token keyword">preceding</span> <span class="token operator">and</span> <span class="token number">1</span> <span class="token keyword">following</span><span class="token punctuation">)</span></span>
<span class="line">           <span class="token keyword">as</span> avg_salary</span>
<span class="line"><span class="token keyword">from</span> employee<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+u+`" alt="salary between"></p><h4 id="分析每个部门按工资降序的记录行号" tabindex="-1"><a class="header-anchor" href="#分析每个部门按工资降序的记录行号"><span>分析每个部门按工资降序的记录行号</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="line"><span class="token keyword">select</span> <span class="token operator">*</span><span class="token punctuation">,</span></span>
<span class="line">       row_number<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">               <span class="token keyword">over</span> <span class="token punctuation">(</span><span class="token keyword">partition</span> <span class="token keyword">by</span> department_name <span class="token keyword">order</span> <span class="token keyword">by</span> salary <span class="token keyword">desc</span><span class="token punctuation">)</span></span>
<span class="line">           <span class="token keyword">as</span> row_no</span>
<span class="line"><span class="token keyword">from</span> employee<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+m+`" alt="row number"></p><h4 id="分析每个部门按工资降序的员工排名-跳跃排名-即按1-1-3-4这样的排名" tabindex="-1"><a class="header-anchor" href="#分析每个部门按工资降序的员工排名-跳跃排名-即按1-1-3-4这样的排名"><span>分析每个部门按工资降序的员工排名，跳跃排名（即按1，1，3，4这样的排名）</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="line"><span class="token keyword">select</span> <span class="token operator">*</span><span class="token punctuation">,</span></span>
<span class="line">       rank<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">               <span class="token keyword">over</span> <span class="token punctuation">(</span><span class="token keyword">partition</span> <span class="token keyword">by</span> department_name <span class="token keyword">order</span> <span class="token keyword">by</span> salary <span class="token keyword">desc</span><span class="token punctuation">)</span></span>
<span class="line">           <span class="token keyword">as</span> rank_no</span>
<span class="line"><span class="token keyword">from</span> employee<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+y+`" alt="jump rank"></p><h4 id="分析每个部门按工资降序的员工排名-连续排名-即按1-1-2-3这样的排名" tabindex="-1"><a class="header-anchor" href="#分析每个部门按工资降序的员工排名-连续排名-即按1-1-2-3这样的排名"><span>分析每个部门按工资降序的员工排名，连续排名（即按1，1，2，3这样的排名）</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="line"><span class="token keyword">select</span> <span class="token operator">*</span><span class="token punctuation">,</span></span>
<span class="line">       dense_rank<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">               <span class="token keyword">over</span> <span class="token punctuation">(</span><span class="token keyword">partition</span> <span class="token keyword">by</span> department_name <span class="token keyword">order</span> <span class="token keyword">by</span> salary <span class="token keyword">desc</span><span class="token punctuation">)</span></span>
<span class="line">           <span class="token keyword">as</span> dense_rank_no</span>
<span class="line"><span class="token keyword">from</span> employee<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+v+`" alt="rank"></p><h4 id="分析每个窗口按入司时间升序与次位薪资差" tabindex="-1"><a class="header-anchor" href="#分析每个窗口按入司时间升序与次位薪资差"><span>分析每个窗口按入司时间升序与次位薪资差</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="line"><span class="token comment">-- 分析每个窗口按入司时间升序与次位薪资差</span></span>
<span class="line"><span class="token keyword">select</span> <span class="token operator">*</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">(</span>first_value<span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">over</span> w <span class="token operator">-</span> last_value<span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">over</span> w<span class="token punctuation">)</span> <span class="token keyword">as</span> diff </span>
<span class="line"><span class="token keyword">from</span> employee </span>
<span class="line">window w <span class="token keyword">as</span> <span class="token punctuation">(</span><span class="token keyword">partition</span> <span class="token keyword">by</span> department_name <span class="token keyword">order</span> <span class="token keyword">by</span> hiredate <span class="token keyword">rows</span> <span class="token operator">between</span> <span class="token number">0</span> <span class="token keyword">preceding</span> <span class="token operator">and</span> <span class="token number">1</span> <span class="token keyword">following</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+b+`" alt="diff salary"></p><h4 id="查询每个部门工资第二高的员工姓名" tabindex="-1"><a class="header-anchor" href="#查询每个部门工资第二高的员工姓名"><span>查询每个部门工资第二高的员工姓名</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="line"><span class="token keyword">select</span> <span class="token operator">*</span></span>
<span class="line"><span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span><span class="token punctuation">,</span></span>
<span class="line">             rank<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">over</span> <span class="token punctuation">(</span><span class="token keyword">partition</span> <span class="token keyword">by</span> department_name <span class="token keyword">order</span> <span class="token keyword">by</span> salary <span class="token keyword">desc</span><span class="token punctuation">)</span> <span class="token keyword">as</span> rank_no</span>
<span class="line">      <span class="token keyword">from</span> employee<span class="token punctuation">)</span> <span class="token keyword">as</span> emp</span>
<span class="line"><span class="token keyword">where</span> rank_no <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+h+'" alt="second salary"></p>',29);function f(x,L){const a=p("ExternalLinkIcon");return l(),t("div",null,[g,s("p",null,[s("a",_,[o("相关数据库表文件"),c(a)])]),q])}const P=e(w,[["render",f],["__file","mysqlOLAP.html.vue"]]),A=JSON.parse('{"path":"/blogs/ops/mysqlOLAP.html","title":"MySQL 开窗函数","lang":"zh-CN","frontmatter":{"title":"MySQL 开窗函数","date":"2023/7/22","tags":["MySQL"],"categories":["ops"]},"headers":[{"level":2,"title":"案例说明","slug":"案例说明","link":"#案例说明","children":[]}],"git":{"createdTime":1690020915000,"updatedTime":1722134881000,"contributors":[{"name":"reine-ishyanami","email":"2402979195@qq.com","commits":2}]},"filePathRelative":"blogs/ops/mysqlOLAP.md"}');export{P as comp,A as data};
