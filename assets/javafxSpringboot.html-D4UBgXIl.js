import{_ as n,o as s,c as a,e as p}from"./app-Cxb9Ozmt.js";const t="/assets/javafxSpringboot_01-BOfhNmMg.png",e="/assets/javafxSpringboot_02-JpAYMXPv.png",l="/assets/javafxSpringboot_03-BxBcA-J7.png",c={},o=p(`<h1 id="springboot-整合-javafx" tabindex="-1"><a class="header-anchor" href="#springboot-整合-javafx"><span>SpringBoot 整合 JavaFX</span></a></h1><h2 id="第一种方案-通过引用第三方-jar-包-整合-javafx-oracle-jdk8" tabindex="-1"><a class="header-anchor" href="#第一种方案-通过引用第三方-jar-包-整合-javafx-oracle-jdk8"><span>第一种方案，通过引用第三方 jar 包，整合 JavaFX(oracle jdk8)</span></a></h2><ol><li><p>引入依赖</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>de.roskenet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>springboot-javafx-support<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.1.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>创建 fxml 文件，如 <code>main.fxml</code></p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="line"><span class="token comment">&lt;!--导包已省略--&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VBox</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://javafx.com/javafx<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name"><span class="token namespace">xmlns:</span>fx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://javafx.com/fxml<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name"><span class="token namespace">fx:</span>controller</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.reine.testsbfxdemo.controller.Main<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">prefHeight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>400.0<span class="token punctuation">&quot;</span></span> <span class="token attr-name">prefWidth</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>600.0<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>CENTER<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Text</span> <span class="token attr-name"><span class="token namespace">fx:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Hello World<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">onAction</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#modifyText<span class="token punctuation">&quot;</span></span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>click me<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>VBox</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>创建对应控制器 <code>Main.java</code>，并将其定义为视图类</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token annotation punctuation">@FXMLController</span></span>
<span class="line"><span class="token annotation punctuation">@FXMLView</span><span class="token punctuation">(</span><span class="token string">&quot;main.fxml&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">  <span class="token annotation punctuation">@FXML</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token class-name">Text</span> text<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${test.property}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token class-name">String</span> property<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token annotation punctuation">@FXML</span></span>
<span class="line">  <span class="token keyword">void</span> <span class="token function">modifyText</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> actionEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 打开第二个窗口</span></span>
<span class="line">      <span class="token comment">// App.showView(Second.class);  // 不给模态直接替换场景</span></span>
<span class="line">      <span class="token class-name">App</span><span class="token punctuation">.</span><span class="token function">showView</span><span class="token punctuation">(</span><span class="token class-name">Second</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Modality</span><span class="token punctuation">.</span><span class="token constant">WINDOW_MODAL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 有模态参数则直接开启新窗口</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token annotation punctuation">@FXML</span></span>
<span class="line">  <span class="token keyword">void</span> <span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 验证属性注入是否成功</span></span>
<span class="line">      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>property<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>第二个窗口</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token annotation punctuation">@FXMLController</span></span>
<span class="line"><span class="token comment">// second.fxml与main.fxml布局一样</span></span>
<span class="line"><span class="token annotation punctuation">@FXMLView</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;second.fxml&quot;</span><span class="token punctuation">,</span> css <span class="token operator">=</span> <span class="token string">&quot;second.css&quot;</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">&quot;第二个窗口&quot;</span><span class="token punctuation">,</span> stageStyle <span class="token operator">=</span> <span class="token string">&quot;DECORATED&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Second</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractFxmlView</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">  <span class="token annotation punctuation">@FXML</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token class-name">Text</span> text<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${test.property}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token class-name">String</span> property<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token annotation punctuation">@FXML</span></span>
<span class="line">  <span class="token keyword">void</span> <span class="token function">modifyText</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> actionEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      text<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>property<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>启动类</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token annotation punctuation">@SpringBootApplication</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractJavaFxApplicationSupport</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">launch</span><span class="token punctuation">(</span><span class="token class-name">App</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Main</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">SplashScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token doc-comment comment">/**</span>
<span class="line">          * 重写闪屏，关闭启动时的加载图</span>
<span class="line">          */</span></span>
<span class="line">          <span class="token annotation punctuation">@Override</span></span>
<span class="line">          <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">visible</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">              <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">      <span class="token comment">// 默认启动方式</span></span>
<span class="line">      <span class="token comment">// launch(App.class, Main.class, args);</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>有闪屏时的启动效果</p><p><img src="`+t+'" alt="starting"></p></li><li><p>启动完成后效果</p><p><img src="'+e+'" alt="started"></p><p><img src="'+l+`" alt="Second"></p></li><li><p>配置文件参数</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="line"><span class="token key atrule">javafx</span><span class="token punctuation">:</span></span>
<span class="line"><span class="token key atrule">stage</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">style</span><span class="token punctuation">:</span> <span class="token comment"># 主窗口样式 DECORATED UNDECORATED TRANSPARENT UTILITY UNIFIED</span></span>
<span class="line">  <span class="token key atrule">width</span><span class="token punctuation">:</span> <span class="token comment"># 主窗口宽度</span></span>
<span class="line">  <span class="token key atrule">height</span><span class="token punctuation">:</span> <span class="token comment"># 主窗口高度</span></span>
<span class="line">  <span class="token key atrule">resizable</span><span class="token punctuation">:</span> <span class="token comment"># 主窗口是否可以调整大小 true false</span></span>
<span class="line"><span class="token key atrule">appicons</span><span class="token punctuation">:</span> <span class="token comment"># 主窗口的图标, 例如/images/logo.png可以读取到resources下的images目录下的logo.png</span></span>
<span class="line"><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token comment"># 主窗口的标题    </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="第二种方案-通过-springboot-的事件发布订阅机制-oracle-jdk8" tabindex="-1"><a class="header-anchor" href="#第二种方案-通过-springboot-的事件发布订阅机制-oracle-jdk8"><span>第二种方案，通过 SpringBoot 的事件发布订阅机制(oracle jdk8)</span></a></h2><ol><li><p>创建 fxml 文件，如 <code>main.fxml</code></p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="line"><span class="token comment">&lt;!--导包已省略--&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VBox</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://javafx.com/javafx<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name"><span class="token namespace">xmlns:</span>fx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://javafx.com/fxml<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name"><span class="token namespace">fx:</span>controller</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.reine.testsbfxdemo.controller.Main<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">prefHeight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>400.0<span class="token punctuation">&quot;</span></span> <span class="token attr-name">prefWidth</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>600.0<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>CENTER<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Text</span> <span class="token attr-name"><span class="token namespace">fx:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Hello World<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">onAction</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#modifyText<span class="token punctuation">&quot;</span></span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>click me<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>VBox</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>创建对应控制器 <code>Main.java</code></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">  <span class="token annotation punctuation">@FXML</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token class-name">Text</span> text<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${test.property}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token class-name">String</span> property<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token annotation punctuation">@FXML</span></span>
<span class="line">  <span class="token keyword">void</span> <span class="token function">modifyText</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> actionEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      text<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>property<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>要进行发布的事件 <code>StageReadyEvent</code></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StageReadyEvent</span> <span class="token keyword">extends</span> <span class="token class-name">ApplicationEvent</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token doc-comment comment">/**</span>
<span class="line">   * 这里的形参也可以是一个更加复杂的对象；</span>
<span class="line">   * 比如用一个新的对象将stage、fxml、title等需要自定义的参数封装成一个对象，</span>
<span class="line">   * 再通过getSource()返回这整个对象以供给监听器使用；</span>
<span class="line">   * 这里为了简单演示，只传递了stage对象</span>
<span class="line">   */</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token class-name">StageReadyEvent</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> stage<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">super</span><span class="token punctuation">(</span>stage<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">public</span> <span class="token class-name">Stage</span> <span class="token function">getStage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">Stage</span><span class="token punctuation">)</span> <span class="token function">getSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>对应的事件监听者 <code>StageInitializer</code></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token annotation punctuation">@RequiredArgsConstructor</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StageInitializer</span> <span class="token keyword">implements</span> <span class="token class-name">ApplicationListener</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">StageReadyEvent</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">  <span class="token doc-comment comment">/**</span>
<span class="line">   * 这个属性也可以通过event进行传递</span>
<span class="line">   */</span></span>
<span class="line">  <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;classpath:/main.fxml&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token class-name">Resource</span> defaultFxml<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ApplicationContext</span> applicationContext<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token annotation punctuation">@Override</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onApplicationEvent</span><span class="token punctuation">(</span><span class="token class-name">StageReadyEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token class-name">FXMLLoader</span> loader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FXMLLoader</span><span class="token punctuation">(</span>defaultFxml<span class="token punctuation">.</span><span class="token function">getURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token comment">// 让fxml从springbean中拿到交由spring管理的controller；</span></span>
<span class="line">          <span class="token comment">// 否则则controller中将无法使用spring的依赖注入</span></span>
<span class="line">          loader<span class="token punctuation">.</span><span class="token function">setControllerFactory</span><span class="token punctuation">(</span>applicationContext<span class="token operator">::</span><span class="token function">getBean</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token class-name">Parent</span> root <span class="token operator">=</span> loader<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token comment">// 从事件中拿到stage对象</span></span>
<span class="line">          <span class="token class-name">Stage</span> stage <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getStage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          stage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          stage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span>    </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>启动类</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token annotation punctuation">@SpringBootApplication</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestSbFxDemoApplication</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token class-name">ConfigurableApplicationContext</span> applicationContext<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">launch</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token annotation punctuation">@Override</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 发布事件，引导监听器工作</span></span>
<span class="line">      applicationContext<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StageReadyEvent</span><span class="token punctuation">(</span>primaryStage<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token annotation punctuation">@Override</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>
<span class="line">      applicationContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpringApplicationBuilder</span><span class="token punctuation">(</span><span class="token class-name">TestSbFxDemoApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token annotation punctuation">@Override</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>
<span class="line">      applicationContext<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token class-name">Platform</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span>    </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>启动时不会像上一种方式有加载动画，而是启动完成后直接展示窗口</p></li></ol><h2 id="jdk11-及以上的写法" tabindex="-1"><a class="header-anchor" href="#jdk11-及以上的写法"><span>jdk11 及以上的写法</span></a></h2><blockquote><p>由于jdk11后oracle jdk移除了JavaFX模块，故使用JavaFX时需要引入<code>javafx-control</code>和<code>javafx-fxml</code>两个第三方包，并且javafx的类库需要使用java的模块化进行加载，而springboot包没有支持java的模块化，故不可以与普通javafx项目一样添加<code>module-info.java</code>文件并声明引入的包。但是可以使用匿名模块的方式启动JavaFX程序，</p></blockquote><p><strong>示例如下：在原有代码的基础上，新建一个启动类，在该启动类中启动 JavaFX 的主程序</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Launcher</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TestSbFxDemoApplication</span><span class="token punctuation">.</span><span class="token function">main</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>启动时会有如下警告，不影响使用，无视即可</em></p><blockquote><p>9月 13, 2023 6:32:28 下午 com.sun.javafx.application.PlatformImpl startup</p><p>警告: Unsupported JavaFX configuration: classes were loaded from &#39;unnamed module @6909b2de&#39;</p></blockquote>`,11),i=[o];function u(k,d){return s(),a("div",null,i)}const v=n(c,[["render",u],["__file","javafxSpringboot.html.vue"]]),m=JSON.parse('{"path":"/blogs/dev/javafxSpringboot.html","title":"SpringBoot 整合 JavaFX","lang":"zh-CN","frontmatter":{"title":"SpringBoot 整合 JavaFX","date":"2023/9/13","tags":["SpringBoot","JavaFX"],"categories":["dev"]},"headers":[{"level":2,"title":"第一种方案，通过引用第三方 jar 包，整合 JavaFX(oracle jdk8)","slug":"第一种方案-通过引用第三方-jar-包-整合-javafx-oracle-jdk8","link":"#第一种方案-通过引用第三方-jar-包-整合-javafx-oracle-jdk8","children":[]},{"level":2,"title":"第二种方案，通过 SpringBoot 的事件发布订阅机制(oracle jdk8)","slug":"第二种方案-通过-springboot-的事件发布订阅机制-oracle-jdk8","link":"#第二种方案-通过-springboot-的事件发布订阅机制-oracle-jdk8","children":[]},{"level":2,"title":"jdk11 及以上的写法","slug":"jdk11-及以上的写法","link":"#jdk11-及以上的写法","children":[]}],"git":{"createdTime":1694601802000,"updatedTime":1722134881000,"contributors":[{"name":"reine-ishyanami","email":"2402979195@qq.com","commits":3}]},"filePathRelative":"blogs/dev/javafxSpringboot.md"}');export{v as comp,m as data};
