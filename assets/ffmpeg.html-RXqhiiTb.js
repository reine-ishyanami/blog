import{_ as l,r as p,o as r,c as i,a,b as s,d as t,e as n}from"./app-Cxb9Ozmt.js";const c="/assets/%E7%BC%96%E8%A7%A3%E7%A0%81%E5%99%A8-C3viubvU.png",d="/assets/%E5%A4%8D%E7%94%A8%E3%80%81%E8%A7%A3%E5%A4%8D%E7%94%A8%E5%99%A8-CfDw4qUu.png",o="/assets/ffmpeg%E9%9F%B3%E8%A7%86%E9%A2%91%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B-DydxXJ7o.png",m="/assets/%E8%A7%86%E9%A2%91%E8%A3%81%E5%89%AA%E5%9B%BE-S9DDzc7g.png",v={},b=n('<h1 id="ffmpeg" tabindex="-1"><a class="header-anchor" href="#ffmpeg"><span>FFmpeg</span></a></h1><h2 id="基础知识" tabindex="-1"><a class="header-anchor" href="#基础知识"><span>基础知识</span></a></h2><ol><li><p>容器/文件(Container/File)：即特定格式的多媒体文件，比如 mp4、flv、mkv 等。</p></li><li><p>媒体流(Stream)：表示时间轴上的一段连续数据，如一段声音数据、一段视频数据或一段字幕数据，可以是压缩的，也可以是非压缩的，压缩的数据需要关联特定的编解码器。</p></li><li><p>数据帧/数据包(Frame/Packet)：通常，一个媒体流是由大量的数据帧组成的，对于压缩数据，帧对应着编解码器的最小处理单元，分属于不同媒体流的数据帧交错存储于容器之中。</p><blockquote><p>一般情况下：Frame对应压缩前的数据，Packet对应压缩后的数据。</p></blockquote></li><li><p>编解码器(Codec)：以帧为单位实现压缩数据和原始数据之间的相互转换的</p><p><img src="'+c+'" alt="编解码器.png"></p></li><li><p>复用(mux)：把不同的流按照某种容器的规则放入容器，这种行为叫做复用(mux)</p></li><li><p>解复用(mux)：把不同的流从某种容器中解析出来，这种行为叫做解复用(demux)</p></li></ol><p><img src="'+d+'" alt="复用、解复用器.png"></p><ol start="7"><li>码率和帧率是视频文件的最重要的基本特征，对于他们的特有设置会决定视频质量。如果我们知道码率和时长那么可以很容易计算出输出文件的大小。</li><li>帧率：帧率也叫帧频率，帧率是视频文件中每一秒的帧数，肉眼想看到连续移动图像至少需要15帧。</li><li>码率：比特率（也叫码率，数据率）是一个确定整体视频/音频质量的参数，秒为单位处理的位数，码率和视频质量成正比，在视频文件中中比特率用bps来表达。</li></ol><h2 id="ffmpeg-1" tabindex="-1"><a class="header-anchor" href="#ffmpeg-1"><span>ffmpeg</span></a></h2><p><img src="'+o+`" alt="ffmpeg音视频处理流程.png"></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">ffmpeg <span class="token parameter variable">-i</span> test_1920x1080.mp4 <span class="token parameter variable">-acodec</span> copy <span class="token parameter variable">-vcodec</span> libx264 <span class="token parameter variable">-s</span> 1280x720 test_1280x720.flv</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="ffmpeg命令分类" tabindex="-1"><a class="header-anchor" href="#ffmpeg命令分类"><span>ffmpeg命令分类</span></a></h3><table><thead><tr><th>命令参数</th><th>内容</th></tr></thead><tbody><tr><td>-version</td><td>显示版本</td></tr><tr><td>-buildconf</td><td>显示编译配置</td></tr><tr><td>-formats</td><td>显示可用格式(muxers + demuxers)</td></tr><tr><td>-muxers</td><td>显示可用复用器</td></tr><tr><td>-demuxers</td><td>显示可用解复用器</td></tr><tr><td>-codecs</td><td>显示可用编解码器(decoders + encoders)</td></tr><tr><td>-decoders</td><td>显示可用解码器</td></tr><tr><td>-encoders</td><td>显示可用编码器</td></tr><tr><td>-bsfs</td><td>显示可用比特流(filter)</td></tr><tr><td>-protocols</td><td>显示可用的协议</td></tr><tr><td>-filters</td><td>显示可用的过滤器</td></tr><tr><td>-pix_fmts</td><td>显示可用的像素格式</td></tr><tr><td>-layouts</td><td>显示标志声道名称</td></tr><tr><td>-sample_fmts</td><td>显示可用的音频采样格式</td></tr><tr><td>-colors</td><td>显示可用的颜色名称</td></tr></tbody></table><p>查看具体分类所支持的参数</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">ffmpeg <span class="token parameter variable">-h</span> <span class="token assign-left variable">type</span><span class="token operator">=</span>name</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>比如</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">ffmpeg <span class="token parameter variable">-h</span> <span class="token assign-left variable">muxer</span><span class="token operator">=</span>flv</span>
<span class="line">ffmpeg <span class="token parameter variable">-h</span> <span class="token assign-left variable">filter</span><span class="token operator">=</span>atempo</span>
<span class="line">ffmpeg <span class="token parameter variable">-h</span> <span class="token assign-left variable">encoder</span><span class="token operator">=</span>libx264</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ffmpeg命令参数说明" tabindex="-1"><a class="header-anchor" href="#ffmpeg命令参数说明"><span>ffmpeg命令参数说明</span></a></h3><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-i</td><td>指定输入流</td></tr><tr><td>-f</td><td>设定输出格式（format）</td></tr><tr><td>-ss</td><td>开始时间</td></tr><tr><td>-t</td><td>时间长度</td></tr><tr><td>-aframes</td><td>设置要输出的音频频数</td></tr><tr><td>-b:a</td><td>音频码率</td></tr><tr><td>-ar</td><td>设定采样率</td></tr><tr><td>-ac</td><td>设定声音的Channel数</td></tr><tr><td>-acodec</td><td>设定声音编解码器，如果用copy表示原始编解码数据必须被拷贝</td></tr><tr><td>-an</td><td>不处理音频</td></tr><tr><td>-af</td><td>音频过滤器</td></tr><tr><td>-vframes</td><td>设置要输出的视频帧数</td></tr><tr><td>-b</td><td>设定视频码率</td></tr><tr><td>-b:v</td><td>视频码率</td></tr><tr><td>-r</td><td>设定帧速率</td></tr><tr><td>-s</td><td>设定画面的宽高</td></tr><tr><td>-vn</td><td>不处理视频</td></tr><tr><td>-aspect aspect</td><td>设置横纵比（如4:3, 16:9, 1.3333, 1.7777）</td></tr><tr><td>-vcodec</td><td>设定视频编解码器，如果用copy表示原始编解码数据必须被拷贝</td></tr><tr><td>-vf</td><td>视频过滤器</td></tr></tbody></table><h3 id="ffmpeg命令提取音视频数据" tabindex="-1"><a class="header-anchor" href="#ffmpeg命令提取音视频数据"><span>ffmpeg命令提取音视频数据</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 保留封装格式</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> test.mp4 <span class="token parameter variable">-acodec</span> copy <span class="token parameter variable">-vn</span> audio.mp4</span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> test.mp4 <span class="token parameter variable">-vcodec</span> copy <span class="token parameter variable">-an</span> video.mp4</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 提取视频</span></span>
<span class="line"><span class="token comment"># 保留编码格式</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> test.mp4 <span class="token parameter variable">-vcodec</span> copy <span class="token parameter variable">-an</span> test_copy.h264</span>
<span class="line"><span class="token comment"># 强制格式</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> test.mp4 <span class="token parameter variable">-vcodec</span> libx264 <span class="token parameter variable">-an</span> test.h264</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 提取音频</span></span>
<span class="line"><span class="token comment"># 保留编码格式</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> test.mp4 <span class="token parameter variable">-acodec</span> copy <span class="token parameter variable">-vn</span> test.aac</span>
<span class="line"><span class="token comment"># 强制格式</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> test.mp4 <span class="token parameter variable">-acodec</span> libmp3lame <span class="token parameter variable">-vn</span> test.mp3</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ffmpeg命令提取像素格式" tabindex="-1"><a class="header-anchor" href="#ffmpeg命令提取像素格式"><span>ffmpeg命令提取像素格式</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 提取 YUV</span></span>
<span class="line"><span class="token comment"># 提取 3s 数据，分辨率和源视频一致</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> test_1280x720.mp4 <span class="token parameter variable">-t</span> <span class="token number">3</span> <span class="token parameter variable">-pix_fmt</span> yuv420p yuv420p_orig.yuv</span>
<span class="line"><span class="token comment"># 提取3s数据，分辨率转为 320x240</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> test_1280x720.mp4 <span class="token parameter variable">-t</span> <span class="token number">3</span> <span class="token parameter variable">-pix_fmt</span> yuv420p <span class="token parameter variable">-s</span> 320x240 yuv420p_320x240.yuv</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 提取 RGB</span></span>
<span class="line"><span class="token comment"># 提取 3s 数据，分辨率转为 320x240</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> test.mp4 <span class="token parameter variable">-t</span> <span class="token number">3</span> <span class="token parameter variable">-pix_fmt</span> rgb24 <span class="token parameter variable">-s</span> 320x240 rgb24_320x240.rgb</span>
<span class="line"></span>
<span class="line"><span class="token comment"># RGB 与 YUV 之间的转换</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-s</span> 320x240 <span class="token parameter variable">-pix_fmt</span> yuv420p <span class="token parameter variable">-i</span> yuv420p_320x240.yuv <span class="token parameter variable">-pix_fmt</span> rgb24 rgb24_320x240_2.rgb</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ffmpeg命令提取pcm数据" tabindex="-1"><a class="header-anchor" href="#ffmpeg命令提取pcm数据"><span>ffmpeg命令提取PCM数据</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 提取 PCM</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> buweishui.mp3 <span class="token parameter variable">-ar</span> <span class="token number">48000</span> <span class="token parameter variable">-ac</span> <span class="token number">2</span> <span class="token parameter variable">-f</span> s16le 48000_2_s16le.pcm <span class="token comment"># 输出文件后缀名随意</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> buweishui.mp3 <span class="token parameter variable">-ar</span> <span class="token number">48000</span> <span class="token parameter variable">-ac</span> <span class="token number">2</span> <span class="token parameter variable">-sample_fmt</span> s16 out_s16.wav</span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> buweishui.mp3 <span class="token parameter variable">-ar</span> <span class="token number">48000</span> <span class="token parameter variable">-ac</span> <span class="token number">2</span> <span class="token parameter variable">-codec:a</span> pcm_s16le out2_s16le.wav</span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> buweishui.mp3 <span class="token parameter variable">-ar</span> <span class="token number">48000</span> <span class="token parameter variable">-ac</span> <span class="token number">2</span> <span class="token parameter variable">-f</span> f32le 48000_2_f32le.pcm <span class="token comment"># 输出文件后缀名随意</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ffmpeg命令转封装" tabindex="-1"><a class="header-anchor" href="#ffmpeg命令转封装"><span>ffmpeg命令转封装</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 保持编码格式</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> test.mp4 <span class="token parameter variable">-vcodec</span> copy <span class="token parameter variable">-acodec</span> copy test_copy.ts</span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> test.mp4 <span class="token parameter variable">-codec</span> copy test_copy2.ts</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 改变编码格式</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> test.mp4 <span class="token parameter variable">-vcodec</span> libx265 acodec libmp3lame out_h265_mp3.mkv</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 修改帧率</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> test.mp4 <span class="token parameter variable">-r</span> <span class="token number">15</span> output.mp4</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 修改视频码率</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> test.mp4 <span class="token parameter variable">-b</span> 400k output_b.mkv</span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> test.mp4 <span class="token parameter variable">-b:v</span> 400k output_bv.flv</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 修改音频码率（如果不想重新编码 video，需要加上 -vcodec copy） </span></span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> test.mp4 <span class="token parameter variable">-b:a</span> 192k output_ba.mp4</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 修改音视频码率</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> test.mp4 <span class="token parameter variable">-b:v</span> 400k <span class="token parameter variable">-b:a</span> 192k output_bva.mp4</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 修改视频分辨率</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> test.mp4 <span class="token parameter variable">-s</span> 480x270 output_480x270.mp4</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 修改音频采样率</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> test.mp4 <span class="token parameter variable">-ar</span> <span class="token number">44100</span> output_44100hz.mp4</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ffmpeg命令截取与合并视频" tabindex="-1"><a class="header-anchor" href="#ffmpeg命令截取与合并视频"><span>ffmpeg命令截取与合并视频</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 截取视频</span></span>
<span class="line"><span class="token comment"># 如果音视频格式不一致则强制统一为 -vcodec libx264 -acodec aac</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> test1.mp4 <span class="token parameter variable">-ss</span> 00:05:00 <span class="token parameter variable">-t</span> <span class="token number">10</span> <span class="token parameter variable">-codec</span> copy <span class="token number">1</span>.mp4</span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> test2.mp4 <span class="token parameter variable">-ss</span> 00:05:00 <span class="token parameter variable">-t</span> <span class="token number">10</span> <span class="token parameter variable">-codec</span> copy <span class="token number">2</span>.mp4</span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> test3.mp4 <span class="token parameter variable">-ss</span> 00:05:00 <span class="token parameter variable">-t</span> <span class="token number">10</span> <span class="token parameter variable">-codec</span> copy <span class="token number">3</span>.mp4</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 将上述处理结果转成ts格式</span></span>
<span class="line"><span class="token comment"># 分离某些封装格式（例如mp4，flv，mkv等）中的 H.264 的时候，需要首先写入 SPS 和 PPS，否则会导致分离出来的数据没用 SPS、PPS 而无法播放。H.264 码流的 SPS 和 PPS 信息存储在 AVCodecContext 结构体的 extradata 中。需要使用 ffmpeg 中名称为 “h264_mp4toannexb” 的 bitstream filter 处理</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> <span class="token number">1</span>.mp4 <span class="token parameter variable">-codec</span> copy <span class="token parameter variable">-vbsf</span> h264_mp4toannexb <span class="token number">1</span>.ts</span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> <span class="token number">2</span>.mp4 <span class="token parameter variable">-codec</span> copy <span class="token parameter variable">-vbsf</span> h264_mp4toannexb <span class="token number">2</span>.ts</span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> <span class="token number">3</span>.mp4 <span class="token parameter variable">-codec</span> copy <span class="token parameter variable">-vbsf</span> h264_mp4toannexb <span class="token number">3</span>.ts</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 转成 flv 格式</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> <span class="token number">1</span>.mp4 <span class="token parameter variable">-codec</span> copy <span class="token number">1</span>.flv</span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> <span class="token number">2</span>.mp4 <span class="token parameter variable">-codec</span> copy <span class="token number">2</span>.flv</span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> <span class="token number">3</span>.mp4 <span class="token parameter variable">-codec</span> copy <span class="token number">3</span>.flv</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 以 mp4 格式进行拼接</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> <span class="token string">&quot;concat:1.mp4|2.mp4|3.mp4&quot;</span> <span class="token parameter variable">-codec</span> copy out_mp4.mp4 <span class="token comment"># 异常</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-f</span> concat <span class="token parameter variable">-i</span> mp4list.txt <span class="token parameter variable">-codec</span> copy out_mp4.mp4</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 以 ts 格式进行拼接</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> <span class="token string">&quot;concat:1.ts|2.ts|3.ts&quot;</span> <span class="token parameter variable">-codec</span> copy out_ts.mp4</span>
<span class="line">ffmpeg <span class="token parameter variable">-f</span> concat <span class="token parameter variable">-i</span> tslist.txt <span class="token parameter variable">-codec</span> copy out_ts.mp4</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 以 flv 格式进行拼接</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> <span class="token string">&quot;concat:1.flv|2.flv|3.flv&quot;</span> <span class="token parameter variable">-codec</span> copy out_flv.mp4 <span class="token comment"># 异常</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-f</span> concat <span class="token parameter variable">-i</span> flvlist.txt <span class="token parameter variable">-codec</span> copy out_flv.mp4</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>mp4list.txt 内容</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">file</span> <span class="token string">&#39;1.mp4&#39;</span></span>
<span class="line"><span class="token function">file</span> <span class="token string">&#39;2.mp4&#39;</span></span>
<span class="line"><span class="token function">file</span> <span class="token string">&#39;3.mp4&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>tslist.txt 内容</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">file</span> <span class="token string">&#39;1.ts&#39;</span></span>
<span class="line"><span class="token function">file</span> <span class="token string">&#39;2.ts&#39;</span></span>
<span class="line"><span class="token function">file</span> <span class="token string">&#39;3.ts&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>flvlist.txt 内容</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">file</span> <span class="token string">&#39;1.flv&#39;</span></span>
<span class="line"><span class="token function">file</span> <span class="token string">&#39;2.flv&#39;</span></span>
<span class="line"><span class="token function">file</span> <span class="token string">&#39;3.flv&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意事项</p><ul><li>拼接时，视频分辨率可以不同，但编码格式需要统一</li><li>音频编码格式需要统一，音频参数（采样率/声道等）也需要统一</li></ul></blockquote><h3 id="ffmpeg-图片与视频转换" tabindex="-1"><a class="header-anchor" href="#ffmpeg-图片与视频转换"><span>ffmpeg 图片与视频转换</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">ffmpeg <span class="token parameter variable">-i</span> test.mp4 <span class="token parameter variable">-y</span> <span class="token parameter variable">-f</span> image2 <span class="token parameter variable">-ss</span> 00:00:02 <span class="token parameter variable">-vframes</span> <span class="token number">1</span> <span class="token parameter variable">-s</span> 640x360 test.jpg</span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> test.mp4 <span class="token parameter variable">-y</span> <span class="token parameter variable">-f</span> image2 <span class="token parameter variable">-ss</span> 00:00:02 <span class="token parameter variable">-vframes</span> <span class="token number">1</span> <span class="token parameter variable">-s</span> 640x360 test.bmp</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>-i 输入 -y 覆盖 -f 格式 image2 一种格式 -ss 起始值 -vframes 帧 如果大于1 那么 输出加 %03d 如 test%03d.jpg -s 格式大小size</p></blockquote><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 转换视频为图片（每帧一张图）</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> test.mp4 <span class="token parameter variable">-t</span> <span class="token number">5</span> <span class="token parameter variable">-s</span> 640x360 <span class="token parameter variable">-r</span> <span class="token number">15</span> frame%03d.jpg</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 图片转换为视频</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-f</span> image2 <span class="token parameter variable">-i</span> frame%03d.jpg <span class="token parameter variable">-r</span> <span class="token number">25</span> video.mp4</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 从视频中生成 gif 图片</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> test.mp4 <span class="token parameter variable">-t</span> <span class="token number">5</span> <span class="token parameter variable">-r</span> <span class="token number">1</span> image1.gif</span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> test.mp4 <span class="token parameter variable">-t</span> <span class="token number">5</span> <span class="token parameter variable">-r</span> <span class="token number">25</span> <span class="token parameter variable">-s</span> 640x360 image2.gif</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 将 gif 转换为视频</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-f</span> gif <span class="token parameter variable">-i</span> image2.gif image2.mp4</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ffmpeg-命令音视频录制" tabindex="-1"><a class="header-anchor" href="#ffmpeg-命令音视频录制"><span>ffmpeg 命令音视频录制</span></a></h3>`,38),u={href:"https://sourceforge.net/projects/screencapturer/files/",target:"_blank",rel:"noopener noreferrer"},f=a("p",null,[s("查看可用设备名 "),a("code",null,"ffmpeg -list_devices true -f dshow -i dummy")],-1),k=n(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 录制视频</span></span>
<span class="line"><span class="token comment"># 录屏</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-f</span> dshow <span class="token parameter variable">-i</span> <span class="token assign-left variable">video</span><span class="token operator">=</span><span class="token string">&quot;screen-capture-recorder&quot;</span> v-out.mp4</span>
<span class="line"><span class="token comment"># 摄像（根据电脑摄像头名称）</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-f</span> dshow <span class="token parameter variable">-i</span> <span class="token assign-left variable">video</span><span class="token operator">=</span><span class="token string">&quot;Integrated Camera&quot;</span> v-out.mp4 </span>
<span class="line"></span>
<span class="line"><span class="token comment"># 录制声音（默认参数）</span></span>
<span class="line"><span class="token comment"># 系统声音 </span></span>
<span class="line">ffmpeg <span class="token parameter variable">-f</span> dshow <span class="token parameter variable">-i</span> <span class="token assign-left variable">audio</span><span class="token operator">=</span><span class="token string">&quot;virtual-audio-capturer&quot;</span> a-out.aac</span>
<span class="line"><span class="token comment"># 系统+麦克风声音（根据电脑麦克风名称）</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-f</span> dshow <span class="token parameter variable">-i</span> <span class="token assign-left variable">audio</span><span class="token operator">=</span><span class="token string">&quot;麦克风阵列 (Realtek(R) Audio)&quot;</span> <span class="token parameter variable">-f</span> dshow <span class="token parameter variable">-i</span> <span class="token assign-left variable">audio</span><span class="token operator">=</span><span class="token string">&quot;virtual-audio-capturer&quot;</span> <span class="token parameter variable">-filter_complex</span> <span class="token assign-left variable">amix</span><span class="token operator">=</span>inputs<span class="token operator">=</span><span class="token number">2</span>:duration<span class="token operator">=</span>first:dropout_transition<span class="token operator">=</span><span class="token number">2</span> a-out2.aac</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 同时录制声音和视频（默认参数）</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-f</span> dshow <span class="token parameter variable">-i</span> <span class="token assign-left variable">audio</span><span class="token operator">=</span><span class="token string">&quot;麦克风阵列 (Realtek(R) Audio)&quot;</span> <span class="token parameter variable">-f</span> dshow <span class="token parameter variable">-i</span> <span class="token assign-left variable">audio</span><span class="token operator">=</span><span class="token string">&quot;virtual-audio-capturer&quot;</span> <span class="token parameter variable">-filter_complex</span> <span class="token assign-left variable">amix</span><span class="token operator">=</span>inputs<span class="token operator">=</span><span class="token number">2</span>:duration<span class="token operator">=</span>first:dropout_transition<span class="token operator">=</span><span class="token number">2</span> <span class="token parameter variable">-f</span> dshow <span class="token parameter variable">-i</span> <span class="token assign-left variable">video</span><span class="token operator">=</span><span class="token string">&quot;screen-capture-recorder&quot;</span> av-out.mp4 </span>
<span class="line"></span>
<span class="line"><span class="token comment"># 查看视频录制的可选参数</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-f</span> dshow <span class="token parameter variable">-list_options</span> <span class="token boolean">true</span> <span class="token parameter variable">-i</span> <span class="token assign-left variable">video</span><span class="token operator">=</span><span class="token string">&quot;screen-capture-recorder&quot;</span></span>
<span class="line"><span class="token comment"># 查看音频录制的可选参数</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-f</span> dshow <span class="token parameter variable">-list_options</span> <span class="token boolean">true</span> <span class="token parameter variable">-i</span> <span class="token assign-left variable">audio</span><span class="token operator">=</span><span class="token string">&quot;virtual-audio-capturer&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 指定参数录制音视频</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-f</span> dshow <span class="token parameter variable">-i</span> audio＝<span class="token string">&quot;麦克风阵列 (Realtek(R) Audio)&quot;</span> <span class="token parameter variable">-f</span> dshow <span class="token parameter variable">-i</span> <span class="token assign-left variable">audio</span><span class="token operator">=</span><span class="token string">&quot;virtual-audio-capturer&quot;</span> <span class="token parameter variable">-filter_complex</span> <span class="token assign-left variable">amix</span><span class="token operator">=</span>inputs<span class="token operator">=</span><span class="token number">2</span>:duration<span class="token operator">=</span>first:dropout_transition<span class="token operator">=</span><span class="token number">2</span> <span class="token parameter variable">-f</span> dshow <span class="token parameter variable">-video_size</span> 1920x1080 <span class="token parameter variable">-framerate</span> <span class="token number">15</span> <span class="token parameter variable">-pixel_format</span> yuv420p <span class="token parameter variable">-i</span> <span class="token assign-left variable">video</span><span class="token operator">=</span><span class="token string">&quot;screen-capture-recorder&quot;</span> <span class="token parameter variable">-vcodec</span> h264_qsv <span class="token parameter variable">-b:v</span> 3M <span class="token parameter variable">-y</span> av-out.flv</span>
<span class="line"></span>
<span class="line">ffmpeg <span class="token parameter variable">-f</span> dshow <span class="token parameter variable">-i</span> audio＝<span class="token string">&quot;麦克风阵列 (Realtek(R) Audio)&quot;</span> <span class="token parameter variable">-f</span> dshow <span class="token parameter variable">-i</span> <span class="token assign-left variable">audio</span><span class="token operator">=</span><span class="token string">&quot;virtual-audio-capturer&quot;</span> <span class="token parameter variable">-filter_complex</span> <span class="token assign-left variable">amix</span><span class="token operator">=</span>inputs<span class="token operator">=</span><span class="token number">2</span>:duration<span class="token operator">=</span>first:dropout_transition<span class="token operator">=</span><span class="token number">2</span> <span class="token parameter variable">-f</span> dshow <span class="token parameter variable">-i</span> <span class="token assign-left variable">o</span><span class="token operator">=</span><span class="token string">&quot;screen-capture-recorder&quot;</span> <span class="token parameter variable">-vcodec</span> h264_qsv <span class="token parameter variable">-b:v</span> 3M <span class="token parameter variable">-r</span> <span class="token number">15</span> <span class="token parameter variable">-y</span> av-out.mp4</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ffmpeg-直播" tabindex="-1"><a class="header-anchor" href="#ffmpeg-直播"><span>ffmpeg 直播</span></a></h3>`,2),g={href:"https://www.jianshu.com/p/16741e363a77",target:"_blank",rel:"noopener noreferrer"},h=n(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 拉流（对于不是 rtmp 的协议，-c copy 要谨慎使用）</span></span>
<span class="line">ffplay rtmp://server/live/streamName</span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> rtmp://server/live/streamName <span class="token parameter variable">-c</span> copy dump.flv</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 推流</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-re</span> <span class="token parameter variable">-i</span> out.mp4 <span class="token parameter variable">-c</span> copy flv rtmp://server/live/streamName</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ffmpeg视频裁剪-crop" tabindex="-1"><a class="header-anchor" href="#ffmpeg视频裁剪-crop"><span>ffmpeg视频裁剪（crop）</span></a></h3><p><img src="`+m+`" alt="视频裁剪图.png"></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">ffmpeg <span class="token parameter variable">-i</span> input.jpg <span class="token parameter variable">-vf</span> <span class="token assign-left variable">crop</span><span class="token operator">=</span>iw/3:ih:0:0 output.jpg</span>
<span class="line">ffmpeg <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-vf</span> <span class="token assign-left variable">crop</span><span class="token operator">=</span>iw/3:ih:0:0 output.mp4</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ffmpeg文字水印-drawtext" tabindex="-1"><a class="header-anchor" href="#ffmpeg文字水印-drawtext"><span>ffmpeg文字水印（drawtext）</span></a></h3>`,5),y=a("thead",null,[a("tr",null,[a("th",null,"参数"),a("th",null,"类型"),a("th",null,"说明")])],-1),x=a("tr",null,[a("td",null,"text"),a("td",null,"字符串"),a("td",null,"文字")],-1),_=a("tr",null,[a("td",null,"textfile"),a("td",null,"文件路径"),a("td",null,"文字文件")],-1),q=a("tr",null,[a("td",null,"box"),a("td",null,"布尔"),a("td",null,"文字区域背景框（缺省false）")],-1),w=a("tr",null,[a("td",null,"boxcolor"),a("td",null,"颜色"),a("td",null,"展示字体区域块的颜色")],-1),S=a("tr",null,[a("td",null,"font"),a("td",null,"字体名称"),a("td",null,"字体名称（缺省Sans字体）")],-1),A=a("tr",null,[a("td",null,"fontsize"),a("td",null,"整数"),a("td",null,"字体大小")],-1),E=a("tr",null,[a("td",null,"x"),a("td",null,"字符串"),a("td",null,"横坐标（缺省0）")],-1),j=a("tr",null,[a("td",null,"y"),a("td",null,"字符串"),a("td",null,"纵坐标（缺省0）")],-1),P=a("tr",null,[a("td",null,"alpha"),a("td",null,"浮点数"),a("td",null,"透明度（0~1，缺省0）")],-1),T=a("td",null,"enable",-1),z=a("td",null,"特殊表达式",-1),F={href:"http://www.ffmpeg.org/ffmpeg-utils.html#Expression-Evaluation",target:"_blank",rel:"noopener noreferrer"},C=n(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 将文字的水印加在视频的左上角</span></span>
<span class="line">ffplay <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-vf</span> <span class="token string">&quot;drawtext=fontsize=100:fontfile=FreeSerif.ttf:text=&#39;Hello World&#39;:x=20:y=20&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 绿色字体</span></span>
<span class="line">ffplay <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-vf</span> <span class="token string">&quot;drawtext=fontsize=100:fontfile=FreeSerif.ttf:text=&#39;Hello World&#39;:fontcolor=green&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 修改透明度</span></span>
<span class="line">ffplay <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-vf</span> <span class="token string">&quot;drawtext=fontsize=100:fontfile=FreeSerif.ttf:text=&#39;Hello </span>
<span class="line">World&#39;:fontcolor=green:alpha=0.5&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 边框及边框颜色</span></span>
<span class="line">ffplay <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-vf</span> <span class="token string">&quot;drawtext=fontsize=100:fontfile=FreeSerif.ttf:text=&#39;Hello World&#39;:fontcolor=green:alpha=0.5:box=1:boxcolor=yellow&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 将本地时间作为水印内容</span></span>
<span class="line">ffplay <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-vf</span> <span class="token string">&quot;drawtext=fontsize=100:fontfile=FreeSerif.ttf:text=&#39;%{localtime\\:%Y\\-%m\\-%d %H-%M-%S}&#39;:fontcolor=green:alpha=0.5:box=1:boxcolor=yellow&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 在使用 ffmpeg 转码存储到文件时需要加上 -re，否则时间不对</span></span>
<span class="line">ffmpeg <span class="token parameter variable">-re</span> <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-vf</span> <span class="token string">&quot;drawtext=fontsize=100:fontfile=FreeSerif.ttf:text=&#39;%{localtime\\:%Y\\-%m\\-%d %H-%M-%S}&#39;:fontcolor=green:alpha=0.5:box=1:boxcolor=yellow&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 定时显示水印</span></span>
<span class="line">ffplay <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-vf</span> <span class="token string">&quot;drawtext=fontsize=100:fontfile=FreeSerif.ttf:text=&#39;test&#39;:fontcolor=green:alpha=0.5:enable=lt(mod(t\\,3)\\,1)&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 水印跑马灯效果</span></span>
<span class="line">ffplay <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-vf</span> <span class="token string">&quot;drawtext=fontsize=100:fontfile=FreeSerif.ttf:text=&#39;test&#39;:fontcolor=green:alpha=0.5:x=mod(100*t\\,w):y=abs(sin(t))*h*0.7&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ffmpeg图片水印-movie" tabindex="-1"><a class="header-anchor" href="#ffmpeg图片水印-movie"><span>ffmpeg图片水印(movie)</span></a></h3><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>filename</td><td>字符串</td><td>输入的文件名，可以是文件，协议，设备</td></tr><tr><td>format_name, f</td><td>字符串</td><td>输入的封装格式</td></tr><tr><td>stream_index, si</td><td>整数</td><td>输入的流索引编号</td></tr><tr><td>seek_point, sp</td><td>浮点数</td><td>Seek输入流的时间位置</td></tr><tr><td>streams, s</td><td>字符串</td><td>输入的多个流的流信息</td></tr><tr><td>loop</td><td>整数</td><td>循环次数</td></tr><tr><td>discontinuity</td><td>时间差值</td><td>支持跳动的时间戳差值</td></tr></tbody></table><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">ffmpeg <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-vf</span> <span class="token string">&quot;movie=logo.png[watermark];[in][watermark]overlay=x=10:y=10[out]&quot;</span> output.mp4</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>原始视频文件路径：input.mp4</p><p>水印图片路径：logo.png</p><p>水印位置：(x, y) = (10, 10) &lt;= (left, top) 距离左侧、顶部各10像素</p><p>输出文件路径：output.mp4</p></blockquote><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>main_w</td><td>视频单帧图像宽度</td></tr><tr><td>main_h</td><td>视频单帧图像高度</td></tr><tr><td>overlay_w</td><td>水印图片的宽度</td></tr><tr><td>overlay_h</td><td>水印图片的高度</td></tr></tbody></table><p>水印图片位置与对于参数值</p><table><thead><tr><th>水印图片位置</th><th>overlay 值</th></tr></thead><tbody><tr><td>左上角</td><td>10:10</td></tr><tr><td>右上角</td><td>main_w-overlay_w-10:10</td></tr><tr><td>左下角</td><td>10:main_h-overlay_h-10</td></tr><tr><td>右下角</td><td>main_w-overlay_w-10:main_h-overlay_h-10</td></tr></tbody></table><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">ffplay <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-vf</span> <span class="token string">&quot;movie=logo.png[watermark];[in][watermark]overlay=x=mod(50*t\\,main_w):y=abs(sin(t))*h*0.7[out]&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="ffmpeg-画中画" tabindex="-1"><a class="header-anchor" href="#ffmpeg-画中画"><span>ffmpeg 画中画</span></a></h3><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>x</td><td>字符串</td><td>横坐标</td></tr><tr><td>y</td><td>字符串</td><td>纵坐标</td></tr><tr><td>eof_action</td><td>整数</td><td>遇到eof表示时的处理方式，默认为重复</td></tr></tbody></table><p>_ repeat（值为0）【重复前一帧】 _ endcall（值为1）【停止所有的流】</p><ul><li>pass（值为2）【保留主图层】 | | shortest | 布尔 | 终止最短的视频时全部终止（缺省false） | | format | 整数 | 设置output的像素格式，缺省yuv420 _ yuv420（值为0） _ yuv422（值为1） _ yuv444（值为2） _ rgb（值为3） |</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 显示画中画效果</span></span>
<span class="line">ffplay <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-vf</span> <span class="token string">&quot;movie=sub_320x240.mp4[sub];[in][sub]overlay=x=20:y=20[out]&quot;</span></span>
<span class="line">ffplay <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-vf</span> <span class="token string">&quot;movie=sub_320x240.mp4[sub];[in][sub]overlay=x=20:y=20:eof_action=1[out]&quot;</span></span>
<span class="line">ffplay <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-vf</span> <span class="token string">&quot;movie=sub_320x240.mp4[sub];[in][sub]overlay=x=20:y=20:shortest=1[out]&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 缩放子画面尺寸</span></span>
<span class="line">ffplay <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-vf</span> <span class="token string">&quot;movie=sub_320x240.mp4,scale=160x120[sub];[in][sub]overlay=x=20:y=20[out]&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 跑马灯</span></span>
<span class="line">ffplay <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-vf</span> <span class="token string">&quot;movie=sub_320x240.mp4,scale=160x120[sub];[in][sub]overlay=x=mod(50*t\\,main_w):y=abs(sin(t))*h*0.7[out]&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ffmpeg-视频多宫格处理" tabindex="-1"><a class="header-anchor" href="#ffmpeg-视频多宫格处理"><span>ffmpeg 视频多宫格处理</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">ffmpeg <span class="token parameter variable">-i</span> <span class="token number">1</span>.mp4 <span class="token parameter variable">-i</span> <span class="token number">1</span>.mp4 <span class="token parameter variable">-i</span> <span class="token number">1</span>.mp4 <span class="token parameter variable">-i</span> <span class="token number">1</span>.mp4 <span class="token parameter variable">-filter_complex</span> <span class="token string">&quot;nullsrc=size=640x480[base];[0:v]setpts=PTS-STARTPTS,scale=320x240[upperleft];[1:v]setpts=PTS-STARTPTS,scale=320x240[upperright];[2:v]setpts=PTS-STARTPTS,scale=320x240[lowerleft];[3:v]setpts=PTS-STARTPTS,scale=320x240[lowerright];[base][upperleft]overlay=shortest=1[tmp1];[tmp1][upperright]overlay=shortest=1:x=320[tmp2];[tmp2][lowerleft]overlay=shortest=1:y=240[tmp3];[tmp3][lowerright]overlay=shortest=1:x=320:y=240&quot;</span> out.mp4</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="ffplay" tabindex="-1"><a class="header-anchor" href="#ffplay"><span>ffplay</span></a></h2><h3 id="ffplay-播放控制" tabindex="-1"><a class="header-anchor" href="#ffplay-播放控制"><span>ffplay 播放控制</span></a></h3><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>q, ESC</td><td>退出播放</td></tr><tr><td>f</td><td>全屏切换</td></tr><tr><td>p, SPACE</td><td>暂停</td></tr><tr><td>m</td><td>静音切换</td></tr><tr><td>9, 0</td><td>9减少音量，0增加音量</td></tr><tr><td>a</td><td>循环切换音频流</td></tr><tr><td>v</td><td>循环切换视频流</td></tr><tr><td>t</td><td>循环切换字幕流</td></tr><tr><td>c</td><td>循环切换节目</td></tr><tr><td>w</td><td>循环切换过滤器或显示模式</td></tr><tr><td>s</td><td>逐帧播放</td></tr><tr><td>LEFT, RIGHT</td><td>快退、快进10s</td></tr><tr><td>DOWN, UP</td><td>快退、快进1m</td></tr></tbody></table><h3 id="ffplay-命令选项" tabindex="-1"><a class="header-anchor" href="#ffplay-命令选项"><span>ffplay 命令选项</span></a></h3><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-x width</td><td>强制指定宽度</td></tr><tr><td>-y height</td><td>强制指定高度</td></tr><tr><td>-video_size size</td><td>帧尺寸，设置显示帧存储（WxH）格式</td></tr><tr><td>-pixel_format format</td><td>格式设置像素格式</td></tr><tr><td>-fx</td><td>以全屏模式启动</td></tr><tr><td>-an</td><td>禁用音频</td></tr><tr><td>-vn</td><td>禁用视频</td></tr><tr><td>-sn</td><td>禁用字幕</td></tr><tr><td>-ss pos</td><td>指定播放开始时间</td></tr><tr><td>-t duration</td><td>设置播放时长</td></tr><tr><td>-bytes</td><td>按字节进行定位拖动（0=off 1=on -1=auto）</td></tr><tr><td>-seek_interval interval</td><td>自定义快进快退时间，默认为10s</td></tr><tr><td>-nodisp</td><td>关闭图形化显示窗口，不显示视频</td></tr><tr><td>-noborder</td><td>无边框窗口</td></tr><tr><td>-volume vol</td><td>设置起始音量，范围 [0~100]</td></tr><tr><td>-f fmt</td><td>强制使用设置的格式进行解析，如-f s16le</td></tr><tr><td>-window_title title</td><td>设置窗口标题（默认为输入文件名）</td></tr><tr><td>-loop number</td><td>设置播放循环次数</td></tr><tr><td>-showmode mode</td><td>设置显示模式（0视频（缺省），1音频波形，2音频频谱（视频不存在缺省））</td></tr><tr><td>-vf filtergraph</td><td>设置视频滤镜</td></tr><tr><td>-af filtergraph</td><td>设置音频滤镜</td></tr><tr><td>-stats</td><td>打印多个回放统计时间，包括显示流持续时间，编解码器参数，流中的当前位置，以及音频/视频同步差值。默认情况下处于启用状态，要显式禁用它则需要指定-nostats</td></tr><tr><td>-fast</td><td>非标准化规范的多媒体兼容优化</td></tr><tr><td>-genpts</td><td>生成pts</td></tr><tr><td>-sync type</td><td>同步类型 将主时钟设置为audio（type=audio），video（type=video）或external（type=ext），默认是audio为主时钟</td></tr><tr><td>-ast audio_stream_specifier</td><td>指定音频流索引，比如-ast 3，播放流索引为3的音频流</td></tr><tr><td>-vst video_stream_specifier</td><td>指定视频流索引，比如-vst 4，播放流索引为4的视频流</td></tr><tr><td>-sst subtitle_stream_specifier</td><td>指定字幕流索引，比如-sst 5，播放流索引为5的字幕流</td></tr><tr><td>-autoexit</td><td>视频播放完毕自动退出</td></tr><tr><td>-exitnokeydown</td><td>按下键盘任意按键退出播放</td></tr><tr><td>-exitonmousedown</td><td>按下鼠标任意按键退出播放</td></tr><tr><td>-codec:media_specifier codec_name</td><td>强制使用设置的多媒体解码器，media_specifier可用值为a（音频），v（视频）和s（字幕）。比如-codec:v h264_qsv 强制视频采用h264_qsv强制视频采用h264_qsv解码</td></tr><tr><td>-acodec codec_name</td><td>强制使用设置的音频解码器进行音频解码</td></tr><tr><td>-vcodec codec_name</td><td>强制使用设置的视频解码器进行视频解码</td></tr><tr><td>-scodec codec_name</td><td>强制使用设置的字幕解码器进行字幕解码</td></tr><tr><td>-autorotate</td><td>根据文件元数据自动选择视频。值为0或1，默认为1</td></tr><tr><td>-framedrop</td><td>如果视频不同步则丢弃视频帧。当主时钟非视频时钟时默认开启。若需禁用则使用-noframedrop</td></tr><tr><td>-infbuf</td><td>不限制输入缓冲区大小，尽可能快地从输入中读取尽可能多的数据。播放实时流时默认启用，如果未及时读取数据，则可能会丢弃数据。此选项将不限制缓冲区的大小。若需禁用则使用-noinfbuf</td></tr></tbody></table><h3 id="ffplay-命令播放" tabindex="-1"><a class="header-anchor" href="#ffplay-命令播放"><span>ffplay 命令播放</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 播放本地文件</span></span>
<span class="line">ffplay <span class="token parameter variable">-window_title</span> <span class="token string">&quot;test name&quot;</span> <span class="token parameter variable">-ss</span> <span class="token number">2</span> <span class="token parameter variable">-t</span> <span class="token number">10</span> <span class="token parameter variable">-autoexit</span> test.mp4</span>
<span class="line">ffplay buweishui.mp4</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 播放网络流</span></span>
<span class="line">ffplay <span class="token parameter variable">-window_title</span> <span class="token string">&quot;rtmp stream&quot;</span> rtmp://202.69.69.180:443/webcast/bshdlive-pc</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 强制解码器</span></span>
<span class="line"><span class="token comment"># mpeg4 解码器 </span></span>
<span class="line">ffplay <span class="token parameter variable">-vcodec</span> mpeg4 test.mp4</span>
<span class="line"><span class="token comment"># h264 解码器</span></span>
<span class="line">ffplay <span class="token parameter variable">-vcodec</span> h264 test.mp4</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 禁用音频</span></span>
<span class="line">ffplay test.mp4 <span class="token parameter variable">-an</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 禁用视频</span></span>
<span class="line">ffplay test.mp4 <span class="token parameter variable">-vn</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 播放 YUV 数据</span></span>
<span class="line">ffplay <span class="token parameter variable">-pixel_format</span> yuv420p <span class="token parameter variable">-video_size</span> 320x240 <span class="token parameter variable">-framerate</span> <span class="token number">5</span> yuv420p_320x240.yuv</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 播放 RGB 数据</span></span>
<span class="line">ffplay <span class="token parameter variable">-pixel_format</span> rgb24 <span class="token parameter variable">-video_size</span> 320x240 <span class="token parameter variable">-i</span> rgb24_320x240.rgb</span>
<span class="line">ffplay <span class="token parameter variable">-pixel_format</span> rgb24 <span class="token parameter variable">-video_size</span> 320x240 <span class="token parameter variable">-framerate</span> <span class="token number">5</span> <span class="token parameter variable">-i</span> rgb24_320x240.rgb</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 播放 PCM 数据</span></span>
<span class="line">ffplay <span class="token parameter variable">-ar</span> <span class="token number">48000</span> <span class="token parameter variable">-ac</span> <span class="token number">2</span> <span class="token parameter variable">-f</span> f32le 48000_2_f32e.pcm</span>
<span class="line"><span class="token parameter variable">-ar</span> <span class="token builtin class-name">set</span> audio sampling rate<span class="token punctuation">(</span>in Hz<span class="token punctuation">)</span><span class="token punctuation">(</span>from <span class="token number">0</span> to INT_MAX<span class="token punctuation">)</span><span class="token punctuation">(</span>default <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token parameter variable">-ac</span> <span class="token builtin class-name">set</span> audio number of audio channels<span class="token punctuation">(</span>from <span class="token number">0</span> to INT_MAX<span class="token punctuation">)</span><span class="token punctuation">(</span>default <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ffplay-简单过滤器" tabindex="-1"><a class="header-anchor" href="#ffplay-简单过滤器"><span>ffplay 简单过滤器</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 视频旋转</span></span>
<span class="line">ffplay <span class="token parameter variable">-i</span> test.mp4 <span class="token parameter variable">-vf</span> <span class="token assign-left variable">transpose</span><span class="token operator">=</span><span class="token number">1</span></span>
<span class="line"><span class="token comment"># 视频反转</span></span>
<span class="line">ffplay test.mp4 <span class="token parameter variable">-vf</span> hflip</span>
<span class="line">ffplay test.mp4 <span class="token parameter variable">-vf</span> vflip</span>
<span class="line"><span class="token comment"># 视频旋转和反转</span></span>
<span class="line">ffplay test.mp4 <span class="token parameter variable">-vf</span> hflip,transpose<span class="token operator">=</span><span class="token number">1</span></span>
<span class="line"><span class="token comment"># 音频变速播放</span></span>
<span class="line">ffplay <span class="token parameter variable">-i</span> test.mp4 <span class="token parameter variable">-af</span> <span class="token assign-left variable">atempo</span><span class="token operator">=</span><span class="token number">2</span></span>
<span class="line"><span class="token comment"># 视频变速播放</span></span>
<span class="line">ffplay <span class="token parameter variable">-i</span> test.mp4 <span class="token parameter variable">-vf</span> <span class="token assign-left variable">setpts</span><span class="token operator">=</span>PTS/2</span>
<span class="line"><span class="token comment"># 音视频同时变速</span></span>
<span class="line">ffplay <span class="token parameter variable">-i</span> test.mp4 <span class="token parameter variable">-vf</span> <span class="token assign-left variable">setpts</span><span class="token operator">=</span>PTS/2 <span class="token parameter variable">-af</span> <span class="token assign-left variable">atempo</span><span class="token operator">=</span><span class="token number">2</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,25);function R(N,B){const e=p("ExternalLinkIcon");return r(),i("div",null,[b,a("blockquote",null,[a("p",null,[s("安装 dshow 软件 "),a("a",u,[s("Screen Capturer Recorder"),t(e)])]),f]),k,a("blockquote",null,[a("p",null,[s("参考"),a("a",g,[s("Nginx搭建rtmp流媒体服务器"),t(e)])])]),h,a("table",null,[y,a("tbody",null,[x,_,q,w,S,A,E,j,P,a("tr",null,[T,z,a("td",null,[a("a",F,[s("表达式参考"),t(e)])])])])]),C])}const M=l(v,[["render",R],["__file","ffmpeg.html.vue"]]),V=JSON.parse('{"path":"/blogs/ops/ffmpeg.html","title":"FFmpeg","lang":"zh-CN","frontmatter":{"title":"FFmpeg","date":"2023/7/20","tags":["FFmepg"],"categories":["ops"]},"headers":[{"level":2,"title":"基础知识","slug":"基础知识","link":"#基础知识","children":[]},{"level":2,"title":"ffmpeg","slug":"ffmpeg-1","link":"#ffmpeg-1","children":[{"level":3,"title":"ffmpeg命令分类","slug":"ffmpeg命令分类","link":"#ffmpeg命令分类","children":[]},{"level":3,"title":"ffmpeg命令参数说明","slug":"ffmpeg命令参数说明","link":"#ffmpeg命令参数说明","children":[]},{"level":3,"title":"ffmpeg命令提取音视频数据","slug":"ffmpeg命令提取音视频数据","link":"#ffmpeg命令提取音视频数据","children":[]},{"level":3,"title":"ffmpeg命令提取像素格式","slug":"ffmpeg命令提取像素格式","link":"#ffmpeg命令提取像素格式","children":[]},{"level":3,"title":"ffmpeg命令提取PCM数据","slug":"ffmpeg命令提取pcm数据","link":"#ffmpeg命令提取pcm数据","children":[]},{"level":3,"title":"ffmpeg命令转封装","slug":"ffmpeg命令转封装","link":"#ffmpeg命令转封装","children":[]},{"level":3,"title":"ffmpeg命令截取与合并视频","slug":"ffmpeg命令截取与合并视频","link":"#ffmpeg命令截取与合并视频","children":[]},{"level":3,"title":"ffmpeg 图片与视频转换","slug":"ffmpeg-图片与视频转换","link":"#ffmpeg-图片与视频转换","children":[]},{"level":3,"title":"ffmpeg 命令音视频录制","slug":"ffmpeg-命令音视频录制","link":"#ffmpeg-命令音视频录制","children":[]},{"level":3,"title":"ffmpeg 直播","slug":"ffmpeg-直播","link":"#ffmpeg-直播","children":[]},{"level":3,"title":"ffmpeg视频裁剪（crop）","slug":"ffmpeg视频裁剪-crop","link":"#ffmpeg视频裁剪-crop","children":[]},{"level":3,"title":"ffmpeg文字水印（drawtext）","slug":"ffmpeg文字水印-drawtext","link":"#ffmpeg文字水印-drawtext","children":[]},{"level":3,"title":"ffmpeg图片水印(movie)","slug":"ffmpeg图片水印-movie","link":"#ffmpeg图片水印-movie","children":[]},{"level":3,"title":"ffmpeg 画中画","slug":"ffmpeg-画中画","link":"#ffmpeg-画中画","children":[]},{"level":3,"title":"ffmpeg 视频多宫格处理","slug":"ffmpeg-视频多宫格处理","link":"#ffmpeg-视频多宫格处理","children":[]}]},{"level":2,"title":"ffplay","slug":"ffplay","link":"#ffplay","children":[{"level":3,"title":"ffplay 播放控制","slug":"ffplay-播放控制","link":"#ffplay-播放控制","children":[]},{"level":3,"title":"ffplay 命令选项","slug":"ffplay-命令选项","link":"#ffplay-命令选项","children":[]},{"level":3,"title":"ffplay 命令播放","slug":"ffplay-命令播放","link":"#ffplay-命令播放","children":[]},{"level":3,"title":"ffplay 简单过滤器","slug":"ffplay-简单过滤器","link":"#ffplay-简单过滤器","children":[]}]}],"git":{"createdTime":1689907574000,"updatedTime":1722134881000,"contributors":[{"name":"reine-ishyanami","email":"2402979195@qq.com","commits":3}]},"filePathRelative":"blogs/ops/ffmpeg.md"}');export{M as comp,V as data};
