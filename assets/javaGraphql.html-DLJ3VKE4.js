import{_ as t,r as e,o as l,c as o,a as s,b as n,d as c,e as a}from"./app-Cxb9Ozmt.js";const i="/assets/javaGraphql_01-CXe6RN3M.png",u={},k=a(`<h1 id="java-基于-springboot-框架使用-graphql-风格-api" tabindex="-1"><a class="header-anchor" href="#java-基于-springboot-框架使用-graphql-风格-api"><span>Java 基于 SpringBoot 框架使用 GraphQL 风格 API</span></a></h1><h2 id="graphql-简介" tabindex="-1"><a class="header-anchor" href="#graphql-简介"><span>GraphQL 简介</span></a></h2><p>GraphQL 是一种用于 API 的查询语言，它为您的 API 定义了一个明确的语言来准确地请求所需的字段和数据。使用 GraphQL，您可以准确地描述您的数据，并按需获取它。</p><h2 id="整合-springboot" tabindex="-1"><a class="header-anchor" href="#整合-springboot"><span>整合 SpringBoot</span></a></h2><h3 id="引入依赖" tabindex="-1"><a class="header-anchor" href="#引入依赖"><span>引入依赖</span></a></h3><div class="language-groovy line-numbers-mode" data-highlighter="prismjs" data-ext="groovy" data-title="groovy"><pre class="language-groovy"><code><span class="line">implementation <span class="token string">&#39;org.springframework.boot:spring-boot-starter-graphql&#39;</span></span>
<span class="line">implementation <span class="token string">&#39;org.springframework.boot:spring-boot-starter-web&#39;</span></span>
<span class="line">testImplementation <span class="token string">&#39;org.springframework.boot:spring-boot-starter-test&#39;</span></span>
<span class="line">testImplementation <span class="token string">&#39;org.springframework:spring-webflux&#39;</span></span>
<span class="line">testImplementation <span class="token string">&#39;org.springframework.graphql:spring-graphql-test&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="编写-graphql-配置" tabindex="-1"><a class="header-anchor" href="#编写-graphql-配置"><span>编写 graphql 配置</span></a></h3><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="line"><span class="token key atrule">spring</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">graphql</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">graphiql</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="定义实体类" tabindex="-1"><a class="header-anchor" href="#定义实体类"><span>定义实体类</span></a></h3><blockquote><p>这里为了省略 service 层代码，将每个实体类对应的 service 层方法定义在实体类中</p></blockquote><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">record</span> <span class="token class-name">Author</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">,</span> <span class="token class-name">String</span> firstName<span class="token punctuation">,</span> <span class="token class-name">String</span> lastName<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Author</span><span class="token punctuation">&gt;</span></span> authors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">static</span> <span class="token punctuation">{</span></span>
<span class="line">        authors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Author</span><span class="token punctuation">(</span><span class="token string">&quot;author-1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Joshua&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Bloch&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        authors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Author</span><span class="token punctuation">(</span><span class="token string">&quot;author-2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Douglas&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Adams&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        authors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Author</span><span class="token punctuation">(</span><span class="token string">&quot;author-3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Bill&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Bryson&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Author</span> <span class="token function">getById</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> authors<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>author <span class="token operator">-&gt;</span> author<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">record</span> <span class="token class-name">Book</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> pageCount<span class="token punctuation">,</span> <span class="token class-name">String</span> authorId<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> autoIncrementId <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Book</span><span class="token punctuation">&gt;</span></span> books <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">static</span> <span class="token punctuation">{</span></span>
<span class="line">        books<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Book</span><span class="token punctuation">(</span><span class="token string">&quot;book-1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Effective Java&quot;</span><span class="token punctuation">,</span> <span class="token number">416</span><span class="token punctuation">,</span> <span class="token string">&quot;author-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        books<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Book</span><span class="token punctuation">(</span><span class="token string">&quot;book-2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hitchhiker&#39;s Guide to the Galaxy&quot;</span><span class="token punctuation">,</span> <span class="token number">208</span><span class="token punctuation">,</span> <span class="token string">&quot;author-2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        books<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Book</span><span class="token punctuation">(</span><span class="token string">&quot;book-3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Down Under&quot;</span><span class="token punctuation">,</span> <span class="token number">436</span><span class="token punctuation">,</span> <span class="token string">&quot;author-3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Book</span> <span class="token function">getById</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> books<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>book <span class="token operator">-&gt;</span> book<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Book</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> pageCount<span class="token punctuation">,</span> <span class="token class-name">String</span> authorId<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Book</span> book <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Book</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;book-%d&quot;</span><span class="token punctuation">,</span> autoIncrementId<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> pageCount<span class="token punctuation">,</span> authorId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        books<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>book<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> book<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Book</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> pageCount<span class="token punctuation">,</span> <span class="token class-name">String</span> authorId<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Book</span><span class="token punctuation">&gt;</span></span> iterator <span class="token operator">=</span> books<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Book</span> newBook <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">while</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Book</span> book <span class="token operator">=</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>book<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                iterator<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                newBook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Book</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> pageCount<span class="token punctuation">,</span> authorId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                books<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>newBook<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>newBook <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;book has not exists&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> newBook<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Book</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Book</span><span class="token punctuation">&gt;</span></span> iterator <span class="token operator">=</span> books<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Book</span> removeBook <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">while</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Book</span> book <span class="token operator">=</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>book<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                iterator<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                removeBook <span class="token operator">=</span> book<span class="token punctuation">;</span></span>
<span class="line">                <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">return</span> removeBook<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="编写-graphql-sdl-schema-definition-language-schema定义语言" tabindex="-1"><a class="header-anchor" href="#编写-graphql-sdl-schema-definition-language-schema定义语言"><span>编写 GraphQL SDL （Schema Definition Language |schema定义语言）</span></a></h3><blockquote><p>在 <code>src/main/resource/graphql</code> 目录下创建 <code>schema.graphqls</code> 文件，内容如下</p></blockquote><div class="language-graphql line-numbers-mode" data-highlighter="prismjs" data-ext="graphql" data-title="graphql"><pre class="language-graphql"><code><span class="line"><span class="token keyword">type</span> <span class="token class-name">Query</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attr-name">hello</span><span class="token punctuation">:</span> <span class="token scalar">String</span>  <span class="token comment"># 简易接口</span></span>
<span class="line">    <span class="token attr-name">bookById</span><span class="token punctuation">(</span><span class="token attr-name">id</span><span class="token punctuation">:</span> <span class="token scalar">ID</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name">Book</span>  <span class="token comment"># 查询指定id的book</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">type</span> <span class="token class-name">Mutation</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attr-name">createBook</span><span class="token punctuation">(</span><span class="token attr-name">name</span><span class="token punctuation">:</span> <span class="token scalar">String</span><span class="token punctuation">,</span> <span class="token attr-name">pageCount</span><span class="token punctuation">:</span> <span class="token scalar">Int</span><span class="token punctuation">,</span> <span class="token attr-name">authorId</span><span class="token punctuation">:</span> <span class="token scalar">ID</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name">Book</span>  <span class="token comment"># 创建book</span></span>
<span class="line">    <span class="token attr-name">updateBook</span><span class="token punctuation">(</span><span class="token attr-name">id</span><span class="token punctuation">:</span> <span class="token scalar">ID</span><span class="token punctuation">,</span> <span class="token attr-name">name</span><span class="token punctuation">:</span> <span class="token scalar">String</span><span class="token punctuation">,</span> <span class="token attr-name">pageCount</span><span class="token punctuation">:</span> <span class="token scalar">Int</span><span class="token punctuation">,</span> <span class="token attr-name">authorId</span><span class="token punctuation">:</span> <span class="token scalar">ID</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name">Book</span>  <span class="token comment"># 更新book</span></span>
<span class="line">    <span class="token attr-name">deleteBook</span><span class="token punctuation">(</span><span class="token attr-name">id</span><span class="token punctuation">:</span> <span class="token scalar">ID</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name">Book</span>  <span class="token comment"># 删除book</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">type</span> <span class="token class-name">Book</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attr-name">id</span><span class="token punctuation">:</span> <span class="token scalar">ID</span></span>
<span class="line">    <span class="token attr-name">name</span><span class="token punctuation">:</span> <span class="token scalar">String</span></span>
<span class="line">    <span class="token attr-name">pageCount</span><span class="token punctuation">:</span> <span class="token scalar">Int</span></span>
<span class="line">    <span class="token attr-name">author</span><span class="token punctuation">:</span> <span class="token class-name">Author</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">type</span> <span class="token class-name">Author</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attr-name">id</span><span class="token punctuation">:</span> <span class="token scalar">ID</span></span>
<span class="line">    <span class="token attr-name">firstName</span><span class="token punctuation">:</span> <span class="token scalar">String</span></span>
<span class="line">    <span class="token attr-name">lastName</span><span class="token punctuation">:</span> <span class="token scalar">String</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="外部接口访问层-controller" tabindex="-1"><a class="header-anchor" href="#外部接口访问层-controller"><span>外部接口访问层 controller</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token annotation punctuation">@Controller</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BookController</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@SchemaMapping</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Author</span> <span class="token function">author</span><span class="token punctuation">(</span><span class="token class-name">Book</span> book<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">Author</span><span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span><span class="token function">authorId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@QueryMapping</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Book</span> <span class="token function">bookById</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Argument</span> <span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">Book</span><span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@QueryMapping</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;Hello GraphQL&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@MutationMapping</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Book</span> <span class="token function">createBook</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Argument</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span></span>
<span class="line">                           <span class="token annotation punctuation">@Argument</span> <span class="token keyword">int</span> pageCount<span class="token punctuation">,</span></span>
<span class="line">                           <span class="token annotation punctuation">@Argument</span> <span class="token class-name">String</span> authorId<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">Book</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> pageCount<span class="token punctuation">,</span> authorId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@MutationMapping</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Book</span> <span class="token function">updateBook</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Argument</span> <span class="token class-name">String</span> id<span class="token punctuation">,</span></span>
<span class="line">                           <span class="token annotation punctuation">@Argument</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span></span>
<span class="line">                           <span class="token annotation punctuation">@Argument</span> <span class="token keyword">int</span> pageCount<span class="token punctuation">,</span></span>
<span class="line">                           <span class="token annotation punctuation">@Argument</span> <span class="token class-name">String</span> authorId<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">Book</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> pageCount<span class="token punctuation">,</span> authorId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@MutationMapping</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Book</span> <span class="token function">deleteBook</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Argument</span> <span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">Book</span><span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启动项目-测试" tabindex="-1"><a class="header-anchor" href="#启动项目-测试"><span>启动项目，测试</span></a></h3><blockquote><p>下面要用到的 graphql 请求文件 <code>bookDetails.graphql</code> 和 <code>bookOperations.graphql</code></p></blockquote><div class="language-graphql line-numbers-mode" data-highlighter="prismjs" data-ext="graphql" data-title="graphql"><pre class="language-graphql"><code><span class="line"><span class="token keyword">query</span> <span class="token definition-query function">bookDetails</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">:</span> <span class="token scalar">ID</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">hello</span></span>
<span class="line">    <span class="token property-query">bookById</span><span class="token punctuation">(</span><span class="token attr-name">id</span><span class="token punctuation">:</span> <span class="token variable">$id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">id</span></span>
<span class="line">        <span class="token property">name</span></span>
<span class="line">        <span class="token property">pageCount</span></span>
<span class="line">        <span class="token object">author</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token property">id</span></span>
<span class="line">            <span class="token property">firstName</span></span>
<span class="line">            <span class="token property">lastName</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-graphql line-numbers-mode" data-highlighter="prismjs" data-ext="graphql" data-title="graphql"><pre class="language-graphql"><code><span class="line"><span class="token keyword">mutation</span> <span class="token definition-mutation function">bookOperations</span><span class="token punctuation">(</span><span class="token variable variable-input">$id</span><span class="token punctuation">:</span> <span class="token scalar">ID</span><span class="token punctuation">,</span> <span class="token variable variable-input">$name</span><span class="token punctuation">:</span> <span class="token scalar">String</span><span class="token punctuation">,</span> <span class="token variable variable-input">$pageCount</span><span class="token punctuation">:</span> <span class="token scalar">Int</span><span class="token punctuation">,</span> <span class="token variable variable-input">$authorId</span><span class="token punctuation">:</span> <span class="token scalar">ID</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property-query property-mutation">createBook</span><span class="token punctuation">(</span><span class="token attr-name">name</span><span class="token punctuation">:</span> <span class="token variable variable-input">$name</span><span class="token punctuation">,</span> <span class="token attr-name">pageCount</span><span class="token punctuation">:</span> <span class="token variable variable-input">$pageCount</span><span class="token punctuation">,</span> <span class="token attr-name">authorId</span><span class="token punctuation">:</span> <span class="token variable variable-input">$authorId</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">id</span></span>
<span class="line">        <span class="token property">name</span></span>
<span class="line">        <span class="token property">pageCount</span></span>
<span class="line">        <span class="token object">author</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token property">id</span></span>
<span class="line">            <span class="token property">firstName</span></span>
<span class="line">            <span class="token property">lastName</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token property-query">updateBook</span><span class="token punctuation">(</span><span class="token attr-name">id</span><span class="token punctuation">:</span> <span class="token variable variable-input">$id</span><span class="token punctuation">,</span> <span class="token attr-name">name</span><span class="token punctuation">:</span> <span class="token variable variable-input">$name</span><span class="token punctuation">,</span> <span class="token attr-name">pageCount</span><span class="token punctuation">:</span> <span class="token variable variable-input">$pageCount</span><span class="token punctuation">,</span> <span class="token attr-name">authorId</span><span class="token punctuation">:</span> <span class="token variable variable-input">$authorId</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">id</span></span>
<span class="line">        <span class="token property">name</span></span>
<span class="line">        <span class="token property">pageCount</span></span>
<span class="line">        <span class="token object">author</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token property">id</span></span>
<span class="line">            <span class="token property">firstName</span></span>
<span class="line">            <span class="token property">lastName</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token property-query">deleteBook</span><span class="token punctuation">(</span><span class="token attr-name">id</span><span class="token punctuation">:</span> <span class="token variable variable-input">$id</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">id</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="通过-webui-进行测试" tabindex="-1"><a class="header-anchor" href="#通过-webui-进行测试"><span>通过 webUI 进行测试</span></a></h4>`,22),r={href:"http://localhost:8080/graphql",target:"_blank",rel:"noopener noreferrer"},d=a('<p><img src="'+i+`" alt="javaGraphql_01"></p><h4 id="在同一个项目中的-test-模块中进行测试" tabindex="-1"><a class="header-anchor" href="#在同一个项目中的-test-模块中进行测试"><span>在同一个项目中的 test 模块中进行测试</span></a></h4><blockquote><p>需要将上面的 <code>bookDetails.graphql</code> 在 <code>src/test/resources/graphql-test</code> 目录下创建</p></blockquote><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token annotation punctuation">@GraphQlTest</span><span class="token punctuation">(</span><span class="token class-name">BookController</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BookControllerTests</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">GraphQlTester</span> graphQlTester<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Test</span></span>
<span class="line">    <span class="token keyword">void</span> <span class="token function">hello_test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>graphQlTester</span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">documentName</span><span class="token punctuation">(</span><span class="token string">&quot;bookDetails&quot;</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">variable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;book-1&quot;</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">entity</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span>str<span class="token operator">-&gt;</span><span class="token string">&quot;Hello GraphQL&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Test</span></span>
<span class="line">    <span class="token keyword">void</span> <span class="token function">shouldGetFirstBook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>graphQlTester</span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">documentName</span><span class="token punctuation">(</span><span class="token string">&quot;bookDetails&quot;</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">variable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;book-1&quot;</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token string">&quot;bookById&quot;</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">matchesJson</span><span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">                            {</span>
<span class="line">                                &quot;id&quot;: &quot;book-1&quot;,</span>
<span class="line">                                &quot;name&quot;: &quot;Effective Java&quot;,</span>
<span class="line">                                &quot;pageCount&quot;: 416,</span>
<span class="line">                                &quot;author&quot;: {</span>
<span class="line">                                  &quot;firstName&quot;: &quot;Joshua&quot;,</span>
<span class="line">                                  &quot;lastName&quot;: &quot;Bloch&quot;</span>
<span class="line">                                }</span>
<span class="line">                            }</span>
<span class="line">                        &quot;&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用另一个项目调用-api-接口" tabindex="-1"><a class="header-anchor" href="#使用另一个项目调用-api-接口"><span>使用另一个项目调用 API 接口</span></a></h4><blockquote><p>需要将上面的 <code>bookDetails.graphql</code> 在 <code>src/test/resources/graphql-documents</code> 目录下创建</p></blockquote><ol><li><p>引入依赖</p><div class="language-groovy line-numbers-mode" data-highlighter="prismjs" data-ext="groovy" data-title="groovy"><pre class="language-groovy"><code><span class="line">compileOnly <span class="token string">&#39;org.projectlombok:lombok&#39;</span></span>
<span class="line">annotationProcessor <span class="token string">&#39;org.projectlombok:lombok&#39;</span></span>
<span class="line">implementation <span class="token string">&#39;org.springframework.boot:spring-boot-starter-graphql&#39;</span></span>
<span class="line">implementation <span class="token string">&#39;org.springframework.boot:spring-boot-starter-web&#39;</span></span>
<span class="line">implementation <span class="token string">&#39;org.springframework.boot:spring-boot-starter-webflux&#39;</span></span>
<span class="line"><span class="token function">testImplementation</span><span class="token punctuation">(</span><span class="token string">&#39;org.springframework.boot:spring-boot-starter-test&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>创建客户端</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token annotation punctuation">@Configuration</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GraphQLConfig</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">	 <span class="token annotation punctuation">@Bean</span></span>
<span class="line">	 <span class="token keyword">public</span> <span class="token class-name">HttpGraphQlClient</span> <span class="token function">client</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		  <span class="token class-name">WebClient</span> webClient <span class="token operator">=</span> <span class="token class-name">WebClient</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:8080/graphql&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		  <span class="token keyword">return</span> <span class="token class-name">HttpGraphQlClient</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>webClient<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	 <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>编写测试代码</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"> <span class="token annotation punctuation">@SpringBootTest</span></span>
<span class="line"> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AppTests</span> <span class="token punctuation">{</span></span>
<span class="line"> </span>
<span class="line"> 	 <span class="token annotation punctuation">@Autowired</span></span>
<span class="line"> 	 <span class="token keyword">private</span> <span class="token class-name">HttpGraphQlClient</span> client<span class="token punctuation">;</span></span>
<span class="line"> </span>
<span class="line"> 	 <span class="token annotation punctuation">@Test</span></span>
<span class="line"> 	 <span class="token keyword">void</span> <span class="token function">test_graphql_client</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"> 		  <span class="token class-name">Book</span> book <span class="token operator">=</span> client</span>
<span class="line"> 					 <span class="token punctuation">.</span><span class="token function">documentName</span><span class="token punctuation">(</span><span class="token string">&quot;bookDetails&quot;</span><span class="token punctuation">)</span></span>
<span class="line"> 					 <span class="token punctuation">.</span><span class="token function">variable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;book-1&quot;</span><span class="token punctuation">)</span></span>
<span class="line"> 					 <span class="token punctuation">.</span><span class="token function">retrieve</span><span class="token punctuation">(</span><span class="token string">&quot;bookById&quot;</span><span class="token punctuation">)</span></span>
<span class="line"> 					 <span class="token punctuation">.</span><span class="token function">toEntity</span><span class="token punctuation">(</span><span class="token class-name">Book</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"> 					 <span class="token punctuation">.</span><span class="token function">block</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"> 		  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>book<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"> 	 <span class="token punctuation">}</span></span>
<span class="line"> </span>
<span class="line"> 	 <span class="token annotation punctuation">@Test</span></span>
<span class="line"> 	 <span class="token keyword">void</span> <span class="token function">test_graphql_test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"> 		  <span class="token class-name">Assertions</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">&quot;Hello GraphQL&quot;</span><span class="token punctuation">,</span> client<span class="token punctuation">.</span><span class="token function">document</span><span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line"> 								{</span>
<span class="line"> 								hello</span>
<span class="line"> 								}&quot;&quot;&quot;</span><span class="token punctuation">)</span></span>
<span class="line"> 					 <span class="token punctuation">.</span><span class="token function">retrieve</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span></span>
<span class="line"> 					 <span class="token punctuation">.</span><span class="token function">toEntity</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"> 					 <span class="token punctuation">.</span><span class="token function">block</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"> 	 <span class="token punctuation">}</span></span>
<span class="line"> <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,7);function v(m,b){const p=e("ExternalLinkIcon");return l(),o("div",null,[k,s("p",null,[n("通过 "),s("a",r,[n("http://localhost:8080/graphql"),c(p)]),n(" 访问，可以看到如下页面，编写graphql查询语句")]),d])}const h=t(u,[["render",v],["__file","javaGraphql.html.vue"]]),q=JSON.parse('{"path":"/blogs/dev/javaGraphql.html","title":"Java 基于 SpringBoot 框架使用 GraphQL 风格 API","lang":"zh-CN","frontmatter":{"title":"Java 基于 SpringBoot 框架使用 GraphQL 风格 API","date":"2024/4/14","tags":["SpringBoot"],"categories":["dev"]},"headers":[{"level":2,"title":"GraphQL 简介","slug":"graphql-简介","link":"#graphql-简介","children":[]},{"level":2,"title":"整合 SpringBoot","slug":"整合-springboot","link":"#整合-springboot","children":[{"level":3,"title":"引入依赖","slug":"引入依赖","link":"#引入依赖","children":[]},{"level":3,"title":"编写 graphql 配置","slug":"编写-graphql-配置","link":"#编写-graphql-配置","children":[]},{"level":3,"title":"定义实体类","slug":"定义实体类","link":"#定义实体类","children":[]},{"level":3,"title":"编写 GraphQL SDL （Schema Definition Language |schema定义语言）","slug":"编写-graphql-sdl-schema-definition-language-schema定义语言","link":"#编写-graphql-sdl-schema-definition-language-schema定义语言","children":[]},{"level":3,"title":"外部接口访问层 controller","slug":"外部接口访问层-controller","link":"#外部接口访问层-controller","children":[]},{"level":3,"title":"启动项目，测试","slug":"启动项目-测试","link":"#启动项目-测试","children":[]}]}],"git":{"createdTime":1713084845000,"updatedTime":1722134881000,"contributors":[{"name":"reine-ishyanami","email":"2402979195@qq.com","commits":2}]},"filePathRelative":"blogs/dev/javaGraphql.md"}');export{h as comp,q as data};
